{"version":3,"sources":["data/index.ts","hooks/usePrevious.ts","contexts/production/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","utilities/production-solver/index.ts","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/BuildingsTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/index.tsx","containers/Main/index.tsx","App.tsx","index.tsx"],"names":["items","itemsRaw","itemRecipeMap","itemRecipeMapRaw","uncraftableItems","uncraftableItemsRaw","recipes","recipesRaw","resources","resourcesRaw","buildings","buildingsRaw","usePrevious","value","ref","useRef","useEffect","current","LOCAL_STORAGE_KEY","ProductionContext","createContext","useProductionContext","ctx","useContext","Error","displayName","ORDERED_RESOURCES","getInitialInputResources","Object","entries","map","key","data","unlimited","String","maxExtraction","itemKey","sort","a","b","aIndex","findIndex","r","Infinity","bIndex","getInitialAllowedRecipes","recipeMap","forEach","isAlternate","reducer","state","action","type","name","newProductionItems","productionItems","nanoid","mode","filter","i","newInputItems","inputItems","newInputResources","inputResources","newAllowedRecipes","allowedRecipes","active","keys","alternates","window","localStorage","getItem","JSON","parse","e","console","error","ProductionProvider","children","useReducer","dispatch","useState","loaded","setLoaded","prevState","setItem","stringify","Provider","itemOptions","text","modeOptions","ProductionTab","Grid","Row","Column","style","flex","Dropdown","fluid","placeholder","selection","search","clearable","options","onChange","Input","className","min","step","disabled","width","minWidth","Button","icon","negative","onClick","Icon","columns","primary","InputsTab","Header","labelPosition","Checkbox","fontWeight","label","checked","Divider","display","alignItems","cleanAltNameRegex","baseRecipes","altRecipes","push","replace","RecipesTab","altRecipeSearch","setAltRecipeSearch","baseRecipeSearch","setBaseRecipeSearch","renderRecipeList","useCallback","recipeList","component","List","Item","renderedBaseRecipes","useMemo","renderedAltRecipes","renderRecipeOptions","searchValue","setSearchValue","rendered","toLowerCase","includes","divided","PlannerOptions","activeTab","setActiveTab","handleSetTab","Container","Menu","pointing","secondary","attached","widths","padding","renderTab","EPSILON","NODE_TYPE","ProductionSolver","inputs","outputs","this","item","amount","Number","resourceData","relativeValue","targetProduct","products","find","p","itemClass","perMinute","t0","performance","now","validate","recipeGraph","generateRecipeGraph","runSolver","productionSolution","productionGraph","generateProductionGraph","t","timestamp","elapsedTime","success","message","length","graph","itemNodes","recipeNodes","edges","initialNode","id","recipeKey","ingredients","depth","buildRecipeTree","classifyNodes","parentNode","product","productNode","outputFrom","inputTo","from","to","ingredient","ingredientNode","recipe","recipeNode","recipeInfo","node","inputInfo","loadGLPK","glpk","model","objective","direction","GLP_MIN","vars","subjectTo","itemNode","target","coef","existingVar","v","bnds","GLP_UP","ub","lb","objectiveVars","productionTarget","solve","msglev","GLP_MSG_OFF","solution","result","status","GLP_OPT","val","Math","abs","itemProductionTotals","nodes","multiplier","producedBy","usedBy","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","productionRate","Cytoscape","use","klay","layout","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","spacing","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","truncateFloat","n","toFixed","getNodeLabel","amountText","producedIn","getEdgeLabel","edge","ProductionGraphTab","props","activeGraph","errorMessage","graphProps","elements","group","classes","source","undefined","height","flexDirection","justifyContent","border","boxSelectionEnabled","autounselectify","wheelSensitivity","maxZoom","minZoom","overflow","BuildingsTab","PlannerResults","autoCalc","setAutoCalc","solverResults","setSolverResults","handleCalculateFactory","solver","exec","results","marginBottom","marginRight","toggle","ProductionPlanner","as","Factory","Segment","size","Main","fixed","header","paddingTop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e4900b6.chunk.js","sourcesContent":["import itemsRaw from './json/items.json';\r\nimport itemRecipeMapRaw from './json/itemRecipeMap.json';\r\nimport uncraftableItemsRaw from './json/uncraftableItems.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport buildingsRaw from './json/buildings.json';\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n}\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n};\r\n\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type ItemRecipeMap = { [key in keyof typeof itemRecipeMapRaw]: string[] } & { [key: string]: string[] };\r\nexport type UncraftableItemsMap = { [key in keyof typeof uncraftableItemsRaw]: string } & { [key: string]: string };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\n\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const itemRecipeMap = (itemRecipeMapRaw as ItemRecipeMap);\r\nexport const uncraftableItems = (uncraftableItemsRaw as UncraftableItemsMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import React, { createContext, useContext, useReducer, useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { resources, recipes } from '../../data'\r\n\r\nconst LOCAL_STORAGE_KEY = 'factory-data';\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'rate-target'|'building-target'|'maximize',\r\n  value: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  key: string,\r\n  name: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n}\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'rate-target',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nfunction getInitialState(): FactoryOptions {\r\n  return {\r\n    key: nanoid(),\r\n    name: 'New Factory',\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction = \r\n  | { type: 'SET_NAME', name: string }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'UPDATE_PRODUCTION_ITEM', data: ProductionItemOptions }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', alternates: boolean, active: boolean }\r\n  | { type: 'LOAD_LOCAL_STORAGE' };\r\n\r\nfunction reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'SET_NAME': {\r\n      return { ...state, name: action.name };\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'UPDATE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      Object.keys(newAllowedRecipes).forEach((key) => {\r\n        if (action.alternates && recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        } else if (!action.alternates && !recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        }\r\n      })\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_LOCAL_STORAGE': {\r\n      const data = window.localStorage.getItem(LOCAL_STORAGE_KEY);\r\n      if (data) {\r\n        try {\r\n          const loadedState = JSON.parse(data);\r\n          return loadedState;\r\n        } catch (e) {\r\n          console.error('LOAD FROM LOCAL STORAGE FAILED');\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const prevState = usePrevious(state);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      dispatch({ type: 'LOAD_LOCAL_STORAGE' });\r\n      setLoaded(true);\r\n    }\r\n  }, [loaded]);\r\n\r\n  useEffect(() => {\r\n    if (prevState !== state) {\r\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state));\r\n    }\r\n  }, [prevState, state]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button, Dropdown, Input, Grid, Icon } from 'semantic-ui-react';\r\nimport { items, itemRecipeMap } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nconst itemOptions = Object.keys(itemRecipeMap)\r\n  .map((key) => ({\r\n    value: key,\r\n    text: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.text > b.text ? 1 : -1;\r\n  });\r\n\r\nconst modeOptions = [\r\n  { value: 'rate-target', text: 'Items Per Min' },\r\n  { value: 'building-target', text: 'Assembly Buildings' },\r\n  { value: 'maximize', text: 'Maximize Output' },\r\n];\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => (\r\n      <Grid.Row key={data.key}>\r\n        <Grid.Column style={{ flex: '1 1 auto' }}>\r\n          <Dropdown\r\n            fluid\r\n            placeholder=\"Select an item\"\r\n            selection\r\n            search\r\n            clearable\r\n            options={itemOptions}\r\n            value={data.itemKey ? data.itemKey : ''}\r\n            onChange={(e, { value }) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_PRODUCTION_ITEM',\r\n                data: { ...data, itemKey: (value as string) },\r\n              });\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column style={{ flex: '0 0 290px' }}>\r\n          <Input\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            fluid\r\n            value={data.value}\r\n            onChange={(e, { value }) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_PRODUCTION_ITEM',\r\n                data: { ...data, value: value },\r\n              });\r\n            }}\r\n            action\r\n          >\r\n            <input disabled={data.mode === 'maximize'} />\r\n            <Dropdown\r\n              style={{ width: '170px', minWidth: '0px' }}\r\n              selection\r\n              options={modeOptions}\r\n              value={data.mode}\r\n              onChange={(e, { value }) => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_PRODUCTION_ITEM',\r\n                  data: { ...data, mode: (value as any) },\r\n                });\r\n              }}\r\n            />\r\n          </Input>\r\n        </Grid.Column>\r\n        <Grid.Column style={{ flex: '0 0 70px' }}>\r\n          <Button\r\n            icon\r\n            negative\r\n            onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }}\r\n          >\r\n            <Icon name='trash alternate outline' />\r\n          </Button>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Select the items you want to produce.\r\n      </p>\r\n      <Grid>\r\n        {renderItemInputs()}\r\n        <Grid.Row columns={1}>\r\n          <Grid.Column>\r\n            <Button\r\n              primary\r\n              onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' })}}\r\n            >\r\n              Add Product\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n","import React from 'react';\r\nimport { Button, Dropdown, Input, Checkbox, Grid, Icon, Header, Divider } from 'semantic-ui-react';\r\nimport { items, itemRecipeMap } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nconst itemOptions = Object.keys(itemRecipeMap)\r\n  .map((key) => ({\r\n    value: key,\r\n    text: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.text > b.text ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => (\r\n      <Grid.Row key={data.key}>\r\n        <Grid.Column style={{ flex: '1 1 auto' }}>\r\n          <Dropdown\r\n            fluid\r\n            placeholder=\"Select an item\"\r\n            selection\r\n            search\r\n            clearable\r\n            options={itemOptions}\r\n            value={data.itemKey ? data.itemKey : ''}\r\n            onChange={(e, { value }) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, itemKey: (value as string) },\r\n              });\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column style={{ flex: '0 0 250px' }}>\r\n          <Input\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            fluid\r\n            value={data.value}\r\n            onChange={(e, { value }) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_ITEM',\r\n                data: { ...data, value: value },\r\n              });\r\n            }}\r\n            labelPosition='right'\r\n          >\r\n            <input disabled={data.unlimited} />\r\n            <Checkbox\r\n              className='label'\r\n              style={{ fontWeight: 'normal' }}\r\n              label='Unlimited'\r\n              checked={data.unlimited}\r\n              onChange={() => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_ITEM',\r\n                  data: { ...data, unlimited: !data.unlimited },\r\n                });\r\n              }}\r\n            />\r\n          </Input>\r\n        </Grid.Column>\r\n        <Grid.Column style={{ flex: '0 0 70px' }}>\r\n          <Button\r\n            icon\r\n            negative\r\n            onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }}\r\n          >\r\n            <Icon name='trash alternate outline' />\r\n          </Button>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    ));\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <Grid.Row key={data.key}>\r\n        <Grid.Column style={{ flex: '0 0 200px', display: 'flex', alignItems: 'center' }}>\r\n          {items[data.itemKey].name}\r\n        </Grid.Column>\r\n        <Grid.Column style={{ flex: '1 1 auto' }}>\r\n          <Input\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            fluid\r\n            value={data.value}\r\n            onChange={(e, { value }) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_INPUT_RESOURCE',\r\n                data: { ...data, value: value },\r\n              });\r\n            }}\r\n            labelPosition='right'\r\n          >\r\n            <input disabled={data.unlimited} />\r\n            <Checkbox\r\n              className='label'\r\n              style={{ fontWeight: 'normal' }}\r\n              label='Unlimited'\r\n              checked={data.unlimited}\r\n              onChange={() => {\r\n                ctx.dispatch({\r\n                  type: 'UPDATE_INPUT_RESOURCE',\r\n                  data: { ...data, unlimited: !data.unlimited },\r\n                });\r\n              }}\r\n            />\r\n          </Input>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>Input Items</Header>\r\n      <p>\r\n        Select the items that you already have available and don't need to produce in this factory.\r\n      </p>\r\n      <Grid>\r\n        {renderItemInputs()}\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              primary\r\n              onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}\r\n            >\r\n              Add Input\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <Divider />\r\n      <Header>Raw Resources</Header>\r\n      <p>\r\n        Select the raw resources that are available to your factory. The default values are set to the map limits.\r\n      </p>\r\n      <Grid>\r\n        <Grid.Row columns={1}>\r\n          <Grid.Column>\r\n            <Button\r\n              primary\r\n              onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}\r\n            >\r\n              Set to Maximum\r\n            </Button>\r\n            <Button\r\n              primary\r\n              onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}\r\n            >\r\n              Set to 0\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        {renderResourceInputs()}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport { Button, Input, Checkbox, Grid, Header, List } from 'semantic-ui-react';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [altRecipeSearch, setAltRecipeSearch] = useState('');\r\n  const [baseRecipeSearch, setBaseRecipeSearch] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  }, [ctx]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const [searchValue, setSearchValue] = alternates\r\n      ? [altRecipeSearch, setAltRecipeSearch]\r\n      : [baseRecipeSearch, setBaseRecipeSearch];\r\n    const rendered = alternates ? renderedAltRecipes : renderedBaseRecipes\r\n    return (\r\n      <>\r\n        <Input\r\n          placeholder='Search...'\r\n          fluid\r\n          action\r\n          value={searchValue}\r\n          onChange={(e, { value }) => { setSearchValue(value); }}\r\n        >\r\n          <input />\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: true }) }}>\r\n            All\r\n          </Button>\r\n          <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: false }) }}>\r\n            None\r\n          </Button>\r\n        </Input>\r\n        <List>\r\n          {rendered.filter(({ label }) => label.toLowerCase().includes(searchValue)).map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <p>\r\n        Select the recipes that are available to your factory\r\n      </p>\r\n      <Grid columns={2} divided={true}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header>Alternate Recipes</Header>\r\n            {renderRecipeOptions(true)}\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Header>Base Recipes</Header>\r\n            {renderRecipeOptions(false)}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n","import React, { useState } from 'react';\r\nimport { Container, Menu } from 'semantic-ui-react';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\n\r\nconst PlannerOptions = () => {\r\n  const [activeTab, setActiveTab] = useState('production');\r\n\r\n  function handleSetTab(e: any, data: any) {\r\n    setActiveTab(data.name);\r\n  }\r\n\r\n  function renderTab() {\r\n    switch (activeTab) {\r\n      case 'production':\r\n        return <ProductionTab />\r\n      case 'inputs':\r\n        return <InputsTab />\r\n      case 'recipes':\r\n        return <RecipesTab />\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Menu pointing secondary attached=\"top\" fluid widths={3}>\r\n        <Menu.Item\r\n          name='production'\r\n          active={activeTab === 'production'}\r\n          onClick={handleSetTab}\r\n        >\r\n          Production\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name='inputs'\r\n          active={activeTab === 'inputs'}\r\n          onClick={handleSetTab}\r\n        >\r\n          Inputs\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name='recipes'\r\n          active={activeTab === 'recipes'}\r\n          onClick={handleSetTab}\r\n        >\r\n          Recipes\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div style={{ padding: '20px 0px' }}>\r\n        {renderTab()}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n","import loadGLPK, { LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions } from '../../contexts/production';\r\nimport { itemRecipeMap, recipes, resources, uncraftableItems } from '../../data';\r\nimport { RecipeMap } from '../../contexts/production';\r\n\r\nconst EPSILON = 1e-8;\r\n\r\ntype InputMap = {\r\n  [key: string]: {\r\n    amount: number,\r\n    value: number,\r\n    type: string,\r\n  }\r\n};\r\ntype OutputMap = { [key: string]: number };\r\n\r\nexport const NODE_TYPE = {\r\n  NONE: 'NONE',\r\n  ROOT: 'ROOT',\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INTERMEDIATE_ITEM: 'INTERMEDIATE_ITEM',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  recipeGraph: RecipeGraph | null,\r\n  timestamp: number,\r\n  elapsedTime: number,\r\n  error: string,\r\n  success: boolean,\r\n};\r\n\r\nexport type RecipeGraph = {\r\n  itemNodes: { [key: string]: ItemNode },\r\n  recipeNodes: { [key: string]: RecipeNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type ItemNode = {\r\n  id: string,\r\n  itemKey: string,\r\n  type: string,\r\n  outputFrom: string[],\r\n  inputTo: string[],\r\n  depth: number,\r\n};\r\n\r\nexport type RecipeNode = {\r\n  id: string,\r\n  recipeKey: string,\r\n  type: string,\r\n  ingredients: string[],\r\n  products: string[],\r\n  depth: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  from: string,\r\n  to: string,\r\n};\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: ProductionNode },\r\n  edges: ProductionEdge[],\r\n};\r\n\r\nexport type ProductionNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type ProductionEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\nexport class ProductionSolver {\r\n  private inputs: InputMap;\r\n  private outputs: OutputMap;\r\n  private allowedRecipes: RecipeMap;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.inputs = {};\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          value: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      if (!amount) return;\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        value: resourceData.relativeValue,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    Object.keys(uncraftableItems).forEach((item) => {\r\n      this.inputs[item] = {\r\n        amount: Infinity,\r\n        value: 10000,\r\n        type: NODE_TYPE.RESOURCE,\r\n      };\r\n    });\r\n\r\n    this.outputs = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      let amount = 0;\r\n      switch (item.mode) {\r\n        case 'rate-target':\r\n          amount = Number(item.value);\r\n          break;\r\n        case 'maximize':\r\n          amount = Infinity;\r\n          break;\r\n        default:\r\n          if (recipes[item.mode]) {\r\n            const targetProduct = recipes[item.mode].products.find((p) => p.itemClass === item.itemKey)!;\r\n            amount = Number(item.value) * targetProduct.perMinute;\r\n          }\r\n      }\r\n      if (amount) {\r\n        if (!this.outputs[item.itemKey]) {\r\n          this.outputs[item.itemKey] = amount;\r\n        } else {\r\n          this.outputs[item.itemKey] += amount;\r\n        }\r\n      }\r\n    });\r\n\r\n    this.allowedRecipes = options.allowedRecipes;\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const t0 = performance.now();\r\n    try {\r\n      this.validate();\r\n      const recipeGraph = this.generateRecipeGraph();\r\n      const productionSolution = await this.runSolver(recipeGraph);\r\n      const productionGraph = this.generateProductionGraph(productionSolution);\r\n      const t = performance.now() - t0;\r\n      return {\r\n        productionGraph,\r\n        recipeGraph,\r\n        timestamp: t0,\r\n        elapsedTime: t,\r\n        error: '',\r\n        success: true,\r\n      };\r\n    } catch (e: any) {\r\n      const t = performance.now() - t0;\r\n      return {\r\n        productionGraph: null,\r\n        recipeGraph: null,\r\n        timestamp: t0,\r\n        elapsedTime: t,\r\n        error: e.message,\r\n        success: false,\r\n      };\r\n    }\r\n  }\r\n\r\n  private validate() {\r\n    if (Object.keys(this.outputs).length === 0) {\r\n      throw new Error('NO INPUTS SET');\r\n    }\r\n  }\r\n\r\n  private generateRecipeGraph(): RecipeGraph {\r\n    const graph: RecipeGraph = {\r\n      itemNodes: {},\r\n      recipeNodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    const initialNode: RecipeNode = {\r\n      id: nanoid(),\r\n      recipeKey: NODE_TYPE.ROOT,\r\n      type: NODE_TYPE.ROOT,\r\n      ingredients: Object.keys(this.outputs),\r\n      products: [],\r\n      depth: -1,\r\n    }\r\n\r\n    this.buildRecipeTree(initialNode, graph, 0);\r\n    this.classifyNodes(graph);\r\n\r\n    return graph;\r\n  }\r\n\r\n  private buildRecipeTree(parentNode: RecipeNode, graph: RecipeGraph, depth: number) {\r\n    if (depth > 50) {\r\n      throw new Error('INFINITE LOOP DETECTED');\r\n    }\r\n\r\n\r\n    // ==== PRODUCT NODES ==== //\r\n    for (const product of parentNode.products) {\r\n      let productNode = graph.itemNodes[product];\r\n      if (!productNode) {\r\n        productNode = {\r\n          id: nanoid(),\r\n          itemKey: product,\r\n          type: NODE_TYPE.NONE,\r\n          outputFrom: [],\r\n          inputTo: [],\r\n          depth,\r\n        };\r\n        graph.itemNodes[product] = productNode;\r\n      }\r\n      productNode.outputFrom.push(parentNode.recipeKey);\r\n      graph.edges.push({\r\n        from: parentNode.id,\r\n        to: productNode.id,\r\n      });\r\n    }\r\n\r\n\r\n    // ==== INGREDIENT NODES ==== //\r\n    for (const ingredient of parentNode.ingredients) {\r\n      let ingredientNode = graph.itemNodes[ingredient];\r\n      if (!ingredientNode) {\r\n        ingredientNode = {\r\n          id: nanoid(),\r\n          itemKey: ingredient,\r\n          type: NODE_TYPE.NONE,\r\n          outputFrom: [],\r\n          inputTo: [],\r\n          depth,\r\n        };\r\n        graph.itemNodes[ingredient] = ingredientNode;\r\n      }\r\n      if (parentNode.type !== NODE_TYPE.ROOT) {\r\n        ingredientNode.inputTo.push(parentNode.recipeKey);\r\n        graph.edges.push({\r\n          from: ingredientNode.id,\r\n          to: parentNode.id,\r\n        });\r\n      }\r\n\r\n\r\n      // ==== NEXT RECIPE NODES ==== //\r\n      let recipeList: string[];\r\n      if (this.inputs[ingredient]) {\r\n        recipeList = [];\r\n        if (this.inputs[ingredient].type === NODE_TYPE.INPUT_ITEM) {\r\n          recipeList = itemRecipeMap[ingredient].filter((r) => this.allowedRecipes[r]);\r\n        }\r\n      } else {\r\n        recipeList = itemRecipeMap[ingredient].filter((r) => this.allowedRecipes[r]);\r\n        if (recipeList.length === 0) {\r\n          throw new Error(`ITEM ${ingredient} HAS NO VALID RECIPES`);\r\n        }\r\n      }\r\n\r\n      for (const recipe of recipeList) {\r\n        let recipeNode = graph.recipeNodes[recipe];\r\n        if (!recipeNode) {\r\n          const recipeInfo = recipes[recipe];\r\n          recipeNode = {\r\n            id: nanoid(),\r\n            recipeKey: recipe,\r\n            type: NODE_TYPE.RECIPE,\r\n            ingredients: recipeInfo.ingredients.map((i) => i.itemClass),\r\n            products: recipeInfo.products.map((p) => p.itemClass),\r\n            depth,\r\n          };\r\n          graph.recipeNodes[recipe] = recipeNode;\r\n          this.buildRecipeTree(recipeNode, graph, depth + 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  private classifyNodes(graph: RecipeGraph) {\r\n    for (const [key, node] of Object.entries(graph.itemNodes)) {\r\n      if (this.outputs[key]) {\r\n        node.type = NODE_TYPE.FINAL_PRODUCT;\r\n      } else if (this.inputs[key]) {\r\n        const inputInfo = this.inputs[key];\r\n        node.type = inputInfo.type;\r\n      } else if (node.inputTo.length === 0) {\r\n        node.type = NODE_TYPE.SIDE_PRODUCT;\r\n      } else {\r\n        node.type = NODE_TYPE.INTERMEDIATE_ITEM;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async runSolver(graph: RecipeGraph): Promise<ProductionSolution> {\r\n    const glpk = await loadGLPK();\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n    };\r\n\r\n    for (const [key, itemNode] of Object.entries(graph.itemNodes)) {\r\n      if (itemNode.type === NODE_TYPE.SIDE_PRODUCT) continue;\r\n\r\n      const vars: Var[] = [];\r\n\r\n      for (const recipe of itemNode.inputTo) {\r\n        const recipeInfo = recipes[recipe];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === key)!;\r\n        vars.push({ name: recipe, coef: target.perMinute });\r\n      }\r\n\r\n      for (const recipe of itemNode.outputFrom) {\r\n        const recipeInfo = recipes[recipe];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === key)!;\r\n        const existingVar = vars.find((v) => v.name === recipe);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipe, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (itemNode.type === NODE_TYPE.RESOURCE) {\r\n        const inputInfo = this.inputs[key];\r\n        model.subjectTo.push({\r\n          name: `${key} resource constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: 0 },\r\n        });\r\n\r\n        const objectiveVars = vars.map<Var>((v) => ({\r\n          name: v.name,\r\n          coef: v.coef * inputInfo.value,\r\n        }));\r\n        model.objective.vars.push(...objectiveVars);\r\n      }\r\n\r\n      else if (itemNode.type === NODE_TYPE.INPUT_ITEM) {\r\n        const inputInfo = this.inputs[key];\r\n        model.subjectTo.push({\r\n          name: `${key} input constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: 0 },\r\n        });\r\n      }\r\n\r\n      else if (itemNode.type === NODE_TYPE.INTERMEDIATE_ITEM) {\r\n        model.subjectTo.push({\r\n          name: `${key} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: 0 },\r\n        });\r\n      }\r\n\r\n      else if (itemNode.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        const productionTarget = this.outputs[key];\r\n        model.subjectTo.push({\r\n          name: `${key} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -productionTarget, lb: 0 },\r\n        });\r\n      }\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF });\r\n    if (solution.result.status !== glpk.GLP_OPT) {\r\n      throw new Error(\"NO POSSIBLE SOLUTION\");\r\n    }\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (Math.abs(val) > EPSILON) {\r\n        result[key] = val;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n\r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount || j === producedBy.length - 1) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n            i++;\r\n            continue nextDemand;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: this.outputs[itemKey] ? NODE_TYPE.FINAL_PRODUCT : NODE_TYPE.SIDE_PRODUCT,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport { ProductionGraph, ProductionNode, ProductionEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\n\r\nCytoscape.use(klay);\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 70,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '140px',\r\n      'text-max-width': '160px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '13px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: {\r\n      'background-color': '#61e873',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: {\r\n      'background-color': '#e1e861',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: {\r\n      'background-color': '#e86161',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: {\r\n      'background-color': '#e8a761',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: {\r\n      'background-color': '#61c2e8',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item',\r\n    style: {\r\n      'background-color': '#61c2e8',\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INTERMEDIATE_ITEM]: 'item',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\n\r\nfunction truncateFloat(n: number) {\r\n  return n.toFixed(4).replace(/\\.?0+$/, '');\r\n}\r\n\r\nfunction getNodeLabel(node: ProductionNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    label = item.name;\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getEdgeLabel(edge: ProductionEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\ninterface Props {\r\n  activeGraph: ProductionGraph | null,\r\n  errorMessage: string,\r\n}\r\n\r\nconst ProductionGraphTab = (props: Props) => {\r\n  const { activeGraph, errorMessage } = props;\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (activeGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(activeGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          id: node.id,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: [node.type === NODE_TYPE.RECIPE ? 'recipe-shape' : 'item-shape', NODE_COLOR_CLASS[node.type]],\r\n      });\r\n    });\r\n    activeGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [activeGraph]);\r\n\r\n  return (\r\n    <div style={{ height: '900px', display: 'flex', flexDirection:'column', alignItems: 'center', justifyContent: 'center', border: '1px solid black' }}>\r\n      {\r\n        graphProps != null\r\n        ? (\r\n            <GraphVisualizer\r\n              key={graphProps.key}\r\n              elements={graphProps.elements}\r\n              layout={layout}\r\n              stylesheet={stylesheet}\r\n              boxSelectionEnabled={false}\r\n              autounselectify={true}\r\n              wheelSensitivity={0.1}\r\n              maxZoom={3.0}\r\n              minZoom={0.1}\r\n              style={{ height: '100%', width: '100%', overflow: 'hidden' }}\r\n            />\r\n        )\r\n        : (\r\n          <>\r\n            <div>\r\n              No graph available\r\n            </div>\r\n            {errorMessage\r\n              ? (\r\n                <div>\r\n                  {`\\nERROR: ${errorMessage}`}\r\n                </div>\r\n              )\r\n              : null}\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n","import React from 'react';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nconst BuildingsTab = () => {\r\n  return (\r\n    <Container>\r\n      <p>does works!</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BuildingsTab;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Container, Menu, Button, Checkbox } from 'semantic-ui-react';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport BuildingsTab from './BuildingsTab';\r\nimport { ProductionSolver, SolverResults } from '../../../utilities/production-solver';\r\nimport { useProductionContext } from '../../../contexts/production';\r\nimport { usePrevious } from '../../../hooks/usePrevious';\r\n\r\nconst PlannerResults = () => {\r\n  const [activeTab, setActiveTab] = useState('production-graph');\r\n  const [autoCalc, setAutoCalc] = useState(true);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const ctx = useProductionContext();\r\n  const prevState = usePrevious(ctx.state);\r\n\r\n  const handleCalculateFactory = useCallback(async () => {\r\n    const solver = new ProductionSolver(ctx.state);\r\n    const results = await solver.exec();\r\n    setSolverResults((prevState) => {\r\n      if (!prevState || prevState.timestamp < results.timestamp) {\r\n        return results;\r\n      }\r\n      return prevState;\r\n    });\r\n  }, [ctx.state]);\r\n\r\n  function handleSetTab(e: any, data: any) {\r\n    setActiveTab(data.name);\r\n  }\r\n\r\n  function renderTab() {\r\n    switch (activeTab) {\r\n      case 'production-graph':\r\n        return <ProductionGraphTab activeGraph={solverResults?.productionGraph || null} errorMessage={solverResults?.error || ''} />\r\n      case 'buildings':\r\n        return <BuildingsTab />\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      handleCalculateFactory();\r\n      setLoaded(true);\r\n    } else if (autoCalc && prevState !== ctx.state) {\r\n      handleCalculateFactory();\r\n    }\r\n  }, [autoCalc, ctx.state, handleCalculateFactory, loaded, prevState]);\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Menu pointing secondary attached=\"top\">\r\n        <Menu.Item\r\n          name='production-graph'\r\n          active={activeTab === 'production-graph'}\r\n          onClick={handleSetTab}\r\n        >\r\n          Production Graph\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name='buildings'\r\n          active={activeTab === 'buildings'}\r\n          onClick={handleSetTab}\r\n        >\r\n          Buildings\r\n        </Menu.Item>\r\n      </Menu>\r\n      <div style={{ padding: '20px 0px' }}>\r\n        <Button primary onClick={handleCalculateFactory} disabled={autoCalc} style={{ marginBottom: '10px', marginRight: '15px' }}>\r\n          Calculate\r\n        </Button>\r\n        <Checkbox\r\n          label='Auto-calculate (turn this off if changing options is slow)'\r\n          toggle\r\n          checked={autoCalc}\r\n          onChange={(e, { checked }) => { setAutoCalc(!!checked); }}\r\n        />\r\n        {renderTab()}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React from 'react';\r\nimport { Container, Header, Segment, Grid } from 'semantic-ui-react';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport { useProductionContext } from '../../contexts/production';\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <>\r\n      <Header as='h1'>Production Planner</Header>\r\n      <p>\r\n        This is some descriptive text that will have some usage information or whatever.\r\n      </p>\r\n      <Container fluid>\r\n        <ProductionProvider>\r\n          <Factory />\r\n        </ProductionProvider>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n\r\nconst Factory = () => {\r\n  const ctx = useProductionContext();\r\n  return (\r\n    <>\r\n      <Segment attached='top'>\r\n        <Header size='medium'>{ctx.state.name}</Header>\r\n      </Segment>\r\n      <Grid columns={2}>\r\n        <Grid.Column width={5}>\r\n          <PlannerOptions />\r\n        </Grid.Column>\r\n        <Grid.Column width={11}>\r\n          <PlannerResults />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, Menu } from 'semantic-ui-react';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Container fluid>\r\n      <Menu fixed='top' size=\"massive\">\r\n        <Container fluid>\r\n          <Menu.Item as='a' header >\r\n            Yet Another Factory Planner\r\n          </Menu.Item>\r\n        </Container>\r\n      </Menu>\r\n      <Container fluid style={{ padding: '0px 50px', paddingTop: '70px' }}>\r\n        <ProductionPlanner />\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Main from './containers/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-less/semantic.less';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './utilities/debug/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals(console.log);\n"],"sourceRoot":""}