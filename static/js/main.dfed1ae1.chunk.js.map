{"version":3,"sources":["assets/satisfactory_logo_full_color_small.png","containers/Main/SiteHeader/index.tsx","hooks/usePrevious.ts","data/index.ts","utilities/production-solver/index.ts","contexts/production/index.tsx","contexts/drawer/index.tsx","components/Portal/index.tsx","components/Drawer/index.tsx","containers/ProductionPlanner/PlannerOptions/ProductionTab/index.tsx","containers/ProductionPlanner/PlannerOptions/InputsTab/index.tsx","containers/ProductionPlanner/PlannerOptions/RecipesTab/index.tsx","containers/ProductionPlanner/PlannerOptions/index.tsx","containers/ProductionPlanner/PlannerResults/ProductionGraphTab/index.tsx","containers/ProductionPlanner/PlannerResults/ReportTab/index.tsx","containers/ProductionPlanner/PlannerResults/index.tsx","containers/ProductionPlanner/Factory.tsx","containers/ProductionPlanner/index.tsx","containers/Main/index.tsx","theme.ts","App.tsx","index.tsx"],"names":["SiteHeader","HeaderContainer","fluid","src","logo","height","alt","MainTitle","BetaTag","styled","Container","theme","other","drawerClosedWidth","Title","div","usePrevious","value","ref","useRef","useEffect","current","buildings","buildingsRaw","recipes","recipesRaw","resources","resourcesRaw","items","itemsRaw","handGatheredItems","handGatheredItemsRaw","EPSILON","MAXIMIZE_TARGET_WEIGHTING","NODE_TYPE","POINTS_ITEM_KEY","ProductionSolver","options","globalWeights","inputs","rateTargets","maximizeTargets","hasPointsTarget","allowedRecipes","this","Number","weightingOptions","power","complexity","validateNumber","maxGlobalWeight","Math","max","inputResources","forEach","item","itemKey","amount","unlimited","Infinity","weight","type","maxResourceWeight","Object","values","map","i","inputItems","allowHandGatheredItems","keys","perMinTargets","recipeTargets","productionItems","Error","isPoints","mode","recipe","existingTarget","find","t","key","priority","push","recipeKey","recipeInfo","target","products","p","itemClass","perMinute","sort","a","b","length","num","isNaN","timestamp","performance","now","loadGLPK","glpk","solveProduction_rateTargetsPass","productionSolution","productionGraph","generateProductionGraph","remainingInputs","inputKey","input","inputNode","nodes","n","usedAmount","multiplier","diff","entries","solveProduction_maximizePass","solution","report","generateProductionReport","computeTime","error","message","model","name","objective","direction","GLP_MIN","vars","subjectTo","pointsVars","buildingInfo","producedIn","powerScore","coef","bnds","GLP_LO","ub","lb","pointCoef","product","sinkPoints","ingredients","ingredient","GLP_UP","NaN","itemInfo","objectiveVars","usedInRecipes","producedFromRecipes","existingVar","v","inputInfo","filter","outputInfo","ov","solve","msglev","GLP_MSG_OFF","result","status","GLP_OPT","val","targetKey","areaScore","area","abs","itemProductionTotals","graph","edges","producedBy","usedBy","id","nanoid","productionTotals","j","nextDemand","usageInfo","usageNode","productionInfo","productionNode","outputRecipe","recipeAmount","itemNode","from","to","productionRate","nodeType","pointsProduced","powerUsageEstimate","resourceEfficiencyScore","totalBuildArea","estimatedFoundations","buildingsUsed","totalMaterialCost","node","buildingKey","ceil","count","materialCost","buildCost","quantity","FACTORY_SETTINGS_VERSION","ProductionContext","createContext","useProductionContext","ctx","useContext","displayName","ORDERED_RESOURCES","getInitialInputResources","data","String","maxExtraction","relativeValue","aIndex","findIndex","r","bIndex","getInitialAllowedRecipes","recipeMap","isAlternate","getInitialState","version","reducer","state","action","newProductionItems","newItem","nextPriority","newInputItems","newInputResources","active","newWeightingOptions","newAllowedRecipes","alternates","encodedState","URLSearchParams","window","location","search","get","stateStr","newState","fields","split","allowedRecipesBits","BigInt","toString","padStart","parseInt","productionItemsStrings","SEP1","str","SEP2","getItemBySlug","getModeBySlug","inputItemsStrings","inputResourcesStrings","resourceOptions","weightingOptionsStrings","decodeState","e","console","getItemSlug","slug","itemEntry","recipeEntry","encodeState","join","productionItemsField","getModeSlug","inputItemsField","inputResourcesField","ProductionProvider","children","useReducer","dispatch","useState","loaded","setLoaded","prevState","history","replaceState","pathname","Provider","DrawerContext","DrawerProvider","props","rootNode","setRootNode","useMantineTheme","DrawerRoot","topOffset","headerHeight","Portal","createPortal","Drawer","open","onToggle","useDrawerContext","DrawerDimmer","onClick","DrawerContainer","DrawerToggle","ToggleLabel","ToggleLabelText","DrawerContent","drawerOpenWidth","colors","background","UnstyledButton","primary","white","span","itemOptions","label","unshift","baseModeOptions","priorityOptions","Array","fill","_","reverse","ProductionTab","Text","modeOptions","replace","Fragment","Group","Select","placeholder","clearable","searchable","onChange","Button","color","TextInput","className","min","step","currentTarget","InputsTab","order","Checkbox","style","fontWeight","checked","Divider","renderWeightInputs","disabled","cleanAltNameRegex","baseRecipes","altRecipes","RecipesTab","searchValue","setSearchValue","renderRecipeList","useCallback","recipeList","component","List","Item","renderedBaseRecipes","useMemo","renderedAltRecipes","renderRecipeOptions","rendered","listStyleType","spacing","toLowerCase","includes","icon","Grid","grow","Col","PlannerOptions","Tabs","variant","Tab","size","Cytoscape","use","klay","warnings","layout","padding","edgeRouting","nodePlacement","edgeSpacingFactor","inLayerSpacingFactor","thoroughness","stylesheet","selector","NODE_COLOR_CLASS","truncateFloat","toFixed","getNodeLabel","amountText","getNodeClasses","classes","getEdgeLabel","edge","_resizeListener","graphRef","bounds","getBoundingClientRect","innerHeight","top","ProductionGraphTab","activeGraph","errorMessage","doFirstRender","setDoFirstRender","resizeListener","addEventListener","removeEventListener","graphProps","elements","group","source","undefined","GraphContainer","instance","boxSelectionEnabled","autounselectify","wheelSensitivity","maxZoom","minZoom","position","width","overflow","Center","gap","formatFloat","toLocaleString","maximumFractionDigits","ReportTab","ReportContainer","SDivider","H3","marginTop","paddingBottom","Count","withPadding","marginBottom","justifyContent","fontSize","PlannerResults","solverResults","seed","floor","Date","getTime","rng","seedrandom","TIPS","TIP_INDEX","TIP","_handleCalculateFactory","debounce","setSolverResults","solver","exec","results","log","leading","trailing","Factory","autoCalc","setAutoCalc","drawerOpen","setDrawerOpen","handleCalculateFactory","Paper","marginRight","Switch","ProductionPlanner","MainContainer","Main","AppShell","header","SHeader","Header","primaryColor","fontFamily","radius","xs","sm","md","lg","xl","styles","root","minHeight","borderWidth","borderColor","horizontal","borderTopColor","backgroundColor","opacity","tabLabel","tabIcon","tabControl","minWidth","tabActive","borderBottomWidth","body","paddingTop","borderBottomLeftRadius","borderBottomRightRadius","App","MantineProvider","ThemeTransfer","mergedTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfed1ae1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/satisfactory_logo_full_color_small.da5e9783.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, Container } from '@mantine/core';\r\nimport logo from '../../../assets/satisfactory_logo_full_color_small.png';\r\n\r\nconst SiteHeader = () => {\r\n  return (\r\n    <HeaderContainer fluid>\r\n      <img src={logo} height={42} alt='Satisfactory logo' />\r\n      <MainTitle>[Yet Another Factory Planner]</MainTitle>\r\n      <BetaTag>(BETA)</BetaTag>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n\r\nconst HeaderContainer = styled(Container)`\r\n  display: flex;\r\n  margin-left: ${({ theme }) => theme.other.drawerClosedWidth};\r\n  padding: 0px;\r\n`;\r\n\r\nconst MainTitle = styled(Title)`\r\n  position: relative;\r\n  top: 1px;\r\n  font-size: 32px;\r\n  color: #fff;\r\n  margin-left: 25px;\r\n  white-space: nowrap;\r\n  font-family: 'Indie Flower', sans-serif;\r\n`;\r\n\r\nconst BetaTag = styled.div`\r\n  position: relative;\r\n  left: 7px;\r\n  top: 3px;\r\n  font-size: 24px;\r\n  color: #fff;\r\n  font-family: 'Fjalla One', sans-serif;\r\n  transform: rotate(20deg);\r\n`;\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport function usePrevious<T>(value: T) {\r\n  const ref = useRef<T>();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n","import buildingsRaw from './json/buildings.json';\r\nimport recipesRaw from './json/recipes.json';\r\nimport resourcesRaw from './json/resources.json';\r\nimport itemsRaw from './json/items.json';\r\nimport handGatheredItemsRaw from './json/handGatheredItems.json';\r\n\r\n\r\nexport type ItemRate = {\r\n  itemClass: string,\r\n  perMinute: number,\r\n};\r\n\r\nexport type ItemQuantity = {\r\n  itemClass: string,\r\n  quantity: number,\r\n};\r\n\r\nexport type BuildingsInfo = {\r\n  slug: string,\r\n  name: string,\r\n  power: number,\r\n  area: number,\r\n  buildCost: ItemQuantity[],\r\n};\r\n\r\nexport type RecipeInfo = {\r\n  slug: string,\r\n  name: string,\r\n  isAlternate: boolean,\r\n  ingredients: ItemRate[],\r\n  products: ItemRate[],\r\n  producedIn: string,\r\n};\r\n\r\nexport type ResourceInfo = {\r\n  itemClass: string,\r\n  maxExtraction: number | null,\r\n  relativeValue: number,\r\n};\r\n\r\nexport type ItemInfo = {\r\n  slug: string,\r\n  name: string,\r\n  sinkPoints: number,\r\n  usedInRecipes: string[],\r\n  producedFromRecipes: string[],\r\n};\r\n\r\nexport type BuildingMap = { [key in keyof typeof buildingsRaw]: BuildingsInfo } & { [key: string]: BuildingsInfo };\r\nexport type RecipeMap = { [key in keyof typeof recipesRaw]: RecipeInfo } & { [key: string]: RecipeInfo };\r\nexport type ResourceMap = { [key in keyof typeof resourcesRaw]: ResourceInfo } & { [key: string]: ResourceInfo };\r\nexport type ItemMap = { [key in keyof typeof itemsRaw]: ItemInfo } & { [key: string]: ItemInfo };\r\nexport type HandGatheredItemMap = { [key in keyof typeof handGatheredItemsRaw]: string } & { [key: string]: string };\r\n\r\nexport const buildings = (buildingsRaw as BuildingMap);\r\nexport const recipes = (recipesRaw as RecipeMap);\r\nexport const resources = (resourcesRaw as ResourceMap);\r\nexport const items = (itemsRaw as ItemMap);\r\nexport const handGatheredItems = (handGatheredItemsRaw as HandGatheredItemMap);\r\n","import loadGLPK, { GLPK, LP, Var } from 'glpk.js';\r\nimport { nanoid } from 'nanoid';\r\nimport { FactoryOptions } from '../../contexts/production';\r\nimport { buildings, items, recipes, resources, handGatheredItems } from '../../data';\r\nimport { RecipeMap } from '../../contexts/production';\r\n\r\nconst EPSILON = 1e-8;\r\nconst MAXIMIZE_TARGET_WEIGHTING = 1e6;\r\n\r\nexport const NODE_TYPE = {\r\n  FINAL_PRODUCT: 'FINAL_PRODUCT',\r\n  SIDE_PRODUCT: 'SIDE_PRODUCT',\r\n  INPUT_ITEM: 'INPUT_ITEM',\r\n  HAND_GATHERED_RESOURCE: 'HAND_GATHERED_RESOURCE',\r\n  RESOURCE: 'RESOURCE',\r\n  RECIPE: 'RECIPE',\r\n};\r\n\r\nexport const POINTS_ITEM_KEY = 'POINTS_ITEM_KEY';\r\n\r\ntype Inputs = {\r\n  [key: string]: {\r\n    amount: number,\r\n    weight: number,\r\n    type: string,\r\n  }\r\n};\r\n\r\ntype RateTargets = {\r\n  [key: string]: {\r\n    value: number,\r\n    recipe: string | null,\r\n    isPoints: boolean,\r\n  }\r\n};\r\n\r\ntype MaximizeTargets = { key: string, priority: number };\r\n\r\ntype GlobalWeights = {\r\n  resources: number,\r\n  power: number,\r\n  complexity: number,\r\n};\r\n\r\ntype ProductionSolution = { [key: string]: number };\r\ntype ProductionAmount = { recipeKey: string, amount: number };\r\ntype ItemProductionTotals = {\r\n  [key: string]: {\r\n    producedBy: ProductionAmount[],\r\n    usedBy: ProductionAmount[],\r\n  }\r\n};\r\n\r\nexport type SolverResults = {\r\n  productionGraph: ProductionGraph | null,\r\n  report: Report | null,\r\n  timestamp: number,\r\n  computeTime: number,\r\n  error: string,\r\n};\r\n\r\nexport type Report = {\r\n  pointsProduced: number,\r\n  powerUsageEstimate: number,\r\n  resourceEfficiencyScore: number,\r\n  totalBuildArea: number,\r\n  estimatedFoundations: number,\r\n  buildingsUsed: {\r\n    [key: string]: {\r\n      count: number,\r\n      materialCost: {\r\n        [key: string]: number,\r\n      }\r\n    },\r\n  },\r\n  totalMaterialCost: {\r\n    [key: string]: number,\r\n  },\r\n}\r\n\r\nexport type ProductionGraph = {\r\n  nodes: { [key: string]: GraphNode },\r\n  edges: GraphEdge[],\r\n};\r\n\r\nexport type GraphNode = {\r\n  id: string,\r\n  key: string,\r\n  type: string,\r\n  multiplier: number,\r\n};\r\n\r\nexport type GraphEdge = {\r\n  key: string,\r\n  from: string,\r\n  to: string,\r\n  productionRate: number,\r\n};\r\n\r\nexport class ProductionSolver {\r\n  private globalWeights: GlobalWeights;\r\n  private inputs: Inputs;\r\n  private rateTargets: RateTargets;\r\n  private maximizeTargets: MaximizeTargets[];\r\n  private hasPointsTarget: boolean;\r\n  private allowedRecipes: RecipeMap;\r\n\r\n  public constructor(options: FactoryOptions) {\r\n    this.allowedRecipes = options.allowedRecipes;\r\n    \r\n    this.globalWeights = {\r\n      resources: Number(options.weightingOptions.resources),\r\n      power: Number(options.weightingOptions.power),\r\n      complexity: Number(options.weightingOptions.complexity),\r\n    };\r\n\r\n    this.validateNumber(this.globalWeights.resources);\r\n    this.validateNumber(this.globalWeights.power);\r\n    this.validateNumber(this.globalWeights.complexity);\r\n\r\n    const maxGlobalWeight = Math.max(this.globalWeights.resources, this.globalWeights.power, this.globalWeights.complexity);\r\n    this.globalWeights.resources /= maxGlobalWeight;\r\n    this.globalWeights.power /= maxGlobalWeight;\r\n    this.globalWeights.complexity /= (maxGlobalWeight / 10);\r\n\r\n    this.inputs = {};\r\n\r\n    options.inputResources.forEach((item) => {\r\n      const resourceData = resources[item.itemKey];\r\n      if (!resourceData) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      const weight = Number(item.weight);\r\n      this.validateNumber(weight);\r\n      this.inputs[item.itemKey] = {\r\n        amount,\r\n        weight,\r\n        type: NODE_TYPE.RESOURCE,\r\n      }\r\n    });\r\n\r\n    const maxResourceWeight = Math.max(...Object.values(this.inputs).map((i) => i.weight));\r\n    Object.values(this.inputs).forEach((i) => { i.weight /= maxResourceWeight });\r\n\r\n    options.inputItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = item.unlimited ? Infinity : Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (!this.inputs[item.itemKey]) {\r\n        this.inputs[item.itemKey] = {\r\n          amount,\r\n          weight: 0,\r\n          type: NODE_TYPE.INPUT_ITEM,\r\n        }\r\n      } else {\r\n        this.inputs[item.itemKey].amount += amount;\r\n      }\r\n    });\r\n\r\n    if (options.allowHandGatheredItems) {\r\n      Object.keys(handGatheredItems).forEach((item) => {\r\n        this.inputs[item] = {\r\n          amount: Infinity,\r\n          weight: 1000,\r\n          type: NODE_TYPE.HAND_GATHERED_RESOURCE,\r\n        };\r\n      });\r\n    }\r\n\r\n    this.rateTargets = {};\r\n    this.maximizeTargets = [];\r\n    this.hasPointsTarget = false;\r\n\r\n    const perMinTargets: RateTargets = {};\r\n    const recipeTargets: RateTargets = {};\r\n    options.productionItems.forEach((item) => {\r\n      if (!item.itemKey) return;\r\n      const amount = Number(item.value);\r\n      this.validateNumber(amount);\r\n      if (!amount) return;\r\n      if (this.inputs[item.itemKey]) throw new Error('CANNOT HAVE ITEM AS BOTH INPUT AND OUTPUT');\r\n      const isPoints = item.itemKey === POINTS_ITEM_KEY;\r\n      if (isPoints) {\r\n        this.hasPointsTarget = true;\r\n      }\r\n      switch (item.mode) {\r\n        case 'per-minute':\r\n          if (perMinTargets[item.itemKey]) {\r\n            perMinTargets[item.itemKey].value += amount;\r\n          } else {\r\n            perMinTargets[item.itemKey] = {\r\n              value: amount,\r\n              recipe: null,\r\n              isPoints,\r\n            };\r\n          }\r\n          break;\r\n        case 'maximize':\r\n          const existingTarget = this.maximizeTargets.find((t) => t.key === item.itemKey);\r\n          if (existingTarget) {\r\n            if (existingTarget.priority < amount) {\r\n              existingTarget.priority = amount;\r\n            }\r\n          } else {\r\n            this.maximizeTargets.push({\r\n              key: item.itemKey,\r\n              priority: amount,\r\n            });\r\n          }\r\n          break;\r\n        default:\r\n          const recipeKey = item.mode;\r\n          const recipeInfo = recipes[recipeKey];\r\n          if (recipeInfo) {\r\n            if (!this.allowedRecipes[recipeKey]) {\r\n              throw new Error('CANNOT TARGET A DISABLED RECIPE');\r\n            }\r\n            const target = recipeInfo.products.find((p) => p.itemClass === item.itemKey)!;\r\n            if (perMinTargets[item.itemKey]) {\r\n              perMinTargets[item.itemKey].value += target.perMinute * amount;\r\n            } else {\r\n              perMinTargets[item.itemKey] = {\r\n                value: target.perMinute * amount,\r\n                recipe: null,\r\n                isPoints: false,\r\n              };\r\n            }\r\n            if (recipeTargets[recipeKey]) {\r\n              recipeTargets[recipeKey].value += amount;\r\n            } else {\r\n              recipeTargets[recipeKey] = {\r\n                value: amount,\r\n                recipe: recipeKey,\r\n                isPoints: false,\r\n              };\r\n            }\r\n          } else {\r\n            throw new Error('INVALID OUTPUT MODE SELECTION');\r\n          }\r\n      }\r\n    });\r\n\r\n    this.maximizeTargets\r\n      .sort((a, b) => {\r\n        if (a.priority > b.priority) return -1;\r\n        if (a.priority < b.priority) return 1;\r\n        throw new Error('TWO TARGET ITEMS HAVE THE SAME MAXIMIZATION PRIORITY');\r\n      });\r\n\r\n    this.rateTargets = {\r\n      ...perMinTargets,\r\n      ...recipeTargets,\r\n    };\r\n    if (Object.keys(this.rateTargets).length === 0 && this.maximizeTargets.length === 0) {\r\n      throw new Error('NO OUTPUTS SET');\r\n    }\r\n  }\r\n\r\n  private validateNumber(num: Number) {\r\n    if (Number.isNaN(num)) {\r\n      throw new Error('INVALID VALUE: NOT A NUMBER');\r\n    } else if (num < 0) {\r\n      throw new Error('INVALID VALUE: NEGATIVE NUMBER');\r\n    }\r\n  }\r\n\r\n  public async exec(): Promise<SolverResults> {\r\n    const timestamp = performance.now();\r\n    try {\r\n      const glpk = await loadGLPK();\r\n      const productionSolution = await this.solveProduction_rateTargetsPass(glpk);\r\n      let productionGraph = this.generateProductionGraph(productionSolution);\r\n\r\n      for (const target of this.maximizeTargets) {\r\n        const remainingInputs: Inputs = {};\r\n        for (const [inputKey, input] of Object.entries(this.inputs)) {\r\n          const inputNode = Object.values(productionGraph.nodes).find((n) => n.key === inputKey);\r\n          let usedAmount = 0;\r\n          if (inputNode) {\r\n            usedAmount = inputNode.multiplier;\r\n          }\r\n          const diff = input.amount - usedAmount;\r\n          if (diff > EPSILON) {\r\n            remainingInputs[inputKey] = {\r\n              ...input,\r\n              amount: diff,\r\n            };\r\n          }\r\n        }\r\n        const solution = await this.solveProduction_maximizePass(target.key, remainingInputs, glpk);\r\n        for (const [key, multiplier] of Object.entries(solution)) {\r\n          if (productionSolution[key]) {\r\n            productionSolution[key] += multiplier;\r\n          } else {\r\n            productionSolution[key] = multiplier;\r\n          }\r\n        }\r\n        productionGraph = this.generateProductionGraph(productionSolution);\r\n      }\r\n\r\n      if (Object.keys(productionGraph.nodes).length === 0) {\r\n        throw new Error('SOLUTION IS EMPTY');\r\n      }\r\n      const report = this.generateProductionReport(productionGraph);\r\n\r\n      return {\r\n        productionGraph,\r\n        report,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: '',\r\n      };\r\n    } catch (e: any) {\r\n      return {\r\n        productionGraph: null,\r\n        report: null,\r\n        timestamp,\r\n        computeTime: performance.now() - timestamp,\r\n        error: e.message,\r\n      };\r\n    }\r\n  }\r\n\r\n  private async solveProduction_rateTargetsPass(glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n    };\r\n\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore,\r\n      });\r\n\r\n      if (this.rateTargets[recipeKey]) {\r\n        model.subjectTo.push({\r\n          name: `${recipeKey} recipe constraint`,\r\n          vars: [{ name: recipeKey, coef: 1 }],\r\n          bnds: { type: glpk.GLP_LO, ub: 0, lb: this.rateTargets[recipeKey].value },\r\n        });\r\n      }\r\n\r\n      if (this.rateTargets[POINTS_ITEM_KEY]) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass]) {\r\n            pointCoef -= product.perMinute * items[product.itemClass].sinkPoints / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass]) {\r\n            pointCoef += ingredient.perMinute * items[ingredient.itemClass].sinkPoints / 1000;\r\n          } \r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n    if (this.rateTargets[POINTS_ITEM_KEY]) {\r\n      model.subjectTo.push({\r\n        name: 'AWESOME Sink Points constraint',\r\n        vars: pointsVars,\r\n        bnds: { type: glpk.GLP_UP, ub: -this.rateTargets[POINTS_ITEM_KEY].value, lb: NaN },\r\n      });\r\n    }\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      const vars: Var[] = [];\r\n      let objectiveVars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n\r\n        objectiveVars.push({\r\n          name: recipeKey,\r\n          coef: this.globalWeights.complexity,\r\n        });\r\n\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (this.inputs[itemKey]) {\r\n        const inputInfo = this.inputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n\r\n        if (inputInfo.type === NODE_TYPE.RESOURCE || inputInfo.type === NODE_TYPE.HAND_GATHERED_RESOURCE) {\r\n          objectiveVars = vars\r\n            .filter((v) => v.coef > 0)\r\n            .map<Var>((v) => ({\r\n              name: v.name,\r\n              coef: v.coef * inputInfo.weight * this.globalWeights.resources,\r\n            }));\r\n        }\r\n      }\r\n\r\n      else if (this.rateTargets[itemKey]) {\r\n        const outputInfo = this.rateTargets[itemKey];\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: -outputInfo.value, lb: NaN },\r\n        });\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n\r\n      objectiveVars.forEach((v) => {\r\n        const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n        if (existingVar) {\r\n          existingVar.coef += v.coef;\r\n        } else {\r\n          model.objective.vars.push(v);\r\n        }\r\n      });\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF });\r\n    if (solution.result.status !== glpk.GLP_OPT) {\r\n      throw new Error(\"NO POSSIBLE SOLUTION\");\r\n    }\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (val > EPSILON) {\r\n        result[key] = val;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n  async solveProduction_maximizePass(targetKey: string, remainingInputs: Inputs, glpk: GLPK): Promise<ProductionSolution> {\r\n    const model: LP = {\r\n      name: 'production',\r\n      objective: {\r\n        name: 'score',\r\n        direction: glpk.GLP_MIN,\r\n        vars: [],\r\n      },\r\n      subjectTo: [],\r\n    };\r\n\r\n    const pointsVars: Var[] = [];\r\n\r\n    for (const [recipeKey, recipeInfo] of Object.entries(recipes)) {\r\n      if (!this.allowedRecipes[recipeKey]) continue;\r\n      const buildingInfo = buildings[recipeInfo.producedIn];\r\n      const powerScore = buildingInfo.power > 0 ? buildingInfo.power * this.globalWeights.power : 0;\r\n      const areaScore = buildingInfo.area * this.globalWeights.complexity;\r\n      model.objective.vars.push({\r\n        name: recipeKey,\r\n        coef: powerScore + areaScore,\r\n      });\r\n\r\n      if (targetKey === POINTS_ITEM_KEY) {\r\n        let pointCoef = 0;\r\n        for (const product of recipeInfo.products) {\r\n          if (!this.inputs[product.itemClass]) {\r\n            pointCoef -= product.perMinute * items[product.itemClass].sinkPoints / 1000;\r\n          }\r\n        }\r\n        for (const ingredient of recipeInfo.ingredients) {\r\n          if (!this.inputs[ingredient.itemClass]) {\r\n            pointCoef += ingredient.perMinute * items[ingredient.itemClass].sinkPoints / 1000;\r\n          }\r\n        }\r\n        pointsVars.push({ name: recipeKey, coef: pointCoef });\r\n      }\r\n    }\r\n\r\n    if (targetKey === POINTS_ITEM_KEY) {\r\n      pointsVars\r\n        .forEach((v) => {\r\n          const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n          if (existingVar) {\r\n            existingVar.coef += v.coef * MAXIMIZE_TARGET_WEIGHTING;\r\n          } else {\r\n            model.objective.vars.push(v);\r\n          }\r\n        });\r\n    }\r\n\r\n    for (const [itemKey, itemInfo] of Object.entries(items)) {\r\n      const vars: Var[] = [];\r\n      let objectiveVars: Var[] = [];\r\n\r\n      for (const recipeKey of itemInfo.usedInRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.ingredients.find((i) => i.itemClass === itemKey)!;\r\n\r\n        objectiveVars.push({\r\n          name: recipeKey,\r\n          coef: this.globalWeights.complexity,\r\n        });\r\n\r\n        vars.push({ name: recipeKey, coef: target.perMinute });\r\n      }\r\n\r\n      for (const recipeKey of itemInfo.producedFromRecipes) {\r\n        if (!this.allowedRecipes[recipeKey]) continue;\r\n        const recipeInfo = recipes[recipeKey];\r\n        const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n\r\n        const existingVar = vars.find((v) => v.name === recipeKey);\r\n        if (existingVar) {\r\n          existingVar.coef -= target.perMinute;\r\n        } else {\r\n          vars.push({ name: recipeKey, coef: -target.perMinute });\r\n        }\r\n      }\r\n\r\n      if (vars.length === 0) continue;\r\n\r\n      if (remainingInputs[itemKey]) {\r\n        const inputInfo = remainingInputs[itemKey];\r\n        if (inputInfo.amount !== Infinity) {\r\n          model.subjectTo.push({\r\n            name: `${itemKey} resource constraint`,\r\n            vars,\r\n            bnds: { type: glpk.GLP_UP, ub: inputInfo.amount, lb: NaN },\r\n          });\r\n        }\r\n\r\n        if (inputInfo.type === NODE_TYPE.RESOURCE || inputInfo.type === NODE_TYPE.HAND_GATHERED_RESOURCE) {\r\n          objectiveVars = vars\r\n            .filter((v) => v.coef > 0)\r\n            .map<Var>((v) => ({\r\n              name: v.name,\r\n              coef: v.coef * inputInfo.weight * this.globalWeights.resources,\r\n            }));\r\n        }\r\n      }\r\n\r\n      else if (targetKey === itemKey) {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} final product constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n\r\n        objectiveVars = vars.map<Var>((v) => ({\r\n          name: v.name,\r\n          coef: v.coef * MAXIMIZE_TARGET_WEIGHTING,\r\n        }));\r\n      }\r\n\r\n      else {\r\n        model.subjectTo.push({\r\n          name: `${itemKey} intermediates constraint`,\r\n          vars,\r\n          bnds: { type: glpk.GLP_UP, ub: 0, lb: NaN },\r\n        });\r\n      }\r\n\r\n      objectiveVars.forEach((v) => {\r\n        const existingVar = model.objective.vars.find((ov) => ov.name === v.name);\r\n        if (existingVar) {\r\n          existingVar.coef += v.coef;\r\n        } else {\r\n          model.objective.vars.push(v);\r\n        }\r\n      });\r\n    }\r\n\r\n    const solution = await glpk.solve(model, { msglev: glpk.GLP_MSG_OFF });\r\n    if (solution.result.status !== glpk.GLP_OPT) {\r\n      throw new Error(\"SOLUTION IS UNBOUNDED\");\r\n    }\r\n\r\n    const result: ProductionSolution = {};\r\n    Object.entries(solution.result.vars).forEach(([key, val]) => {\r\n      if (Math.abs(val) > EPSILON) {\r\n        result[key] = val;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private generateProductionGraph(productionSolution: ProductionSolution): ProductionGraph {\r\n    const itemProductionTotals: ItemProductionTotals = {};\r\n    const graph: ProductionGraph = {\r\n      nodes: {},\r\n      edges: [],\r\n    };\r\n\r\n    for (const [recipeKey, multiplier] of Object.entries(productionSolution)) {\r\n      const recipeInfo = recipes[recipeKey];\r\n\r\n      for (const product of recipeInfo.products) {\r\n        const amount = multiplier * product.perMinute;\r\n        if (!itemProductionTotals[product.itemClass]) {\r\n          itemProductionTotals[product.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[product.itemClass].producedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      for (const ingredient of recipeInfo.ingredients) {\r\n        const amount = multiplier * ingredient.perMinute;\r\n        if (!itemProductionTotals[ingredient.itemClass]) {\r\n          itemProductionTotals[ingredient.itemClass] = {\r\n            producedBy: [],\r\n            usedBy: [],\r\n          };\r\n        }\r\n        itemProductionTotals[ingredient.itemClass].usedBy.push({ recipeKey, amount });\r\n      }\r\n\r\n      graph.nodes[recipeKey] = {\r\n        id: nanoid(),\r\n        key: recipeKey,\r\n        type: NODE_TYPE.RECIPE,\r\n        multiplier,\r\n      };\r\n    }\r\n\r\n    for (const [itemKey, productionTotals] of Object.entries(itemProductionTotals)) {\r\n      const { producedBy, usedBy } = productionTotals;\r\n      let i = 0, j = 0;\r\n      nextDemand:\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        \r\n        while (j < producedBy.length) {\r\n          const productionInfo = producedBy[j];\r\n          const productionNode = graph.nodes[productionInfo.recipeKey];\r\n\r\n          const outputRecipe = this.rateTargets[itemKey]?.recipe;\r\n          if (outputRecipe && outputRecipe === productionInfo.recipeKey) {\r\n            const outputInfo = this.rateTargets[itemKey];\r\n            const recipeInfo = recipes[outputRecipe];\r\n            const target = recipeInfo.products.find((p) => p.itemClass === itemKey)!;\r\n            const recipeAmount = outputInfo.value * target.perMinute;\r\n            productionInfo.amount -= recipeAmount;\r\n\r\n            let itemNode = graph.nodes[itemKey];\r\n            if (!itemNode) {\r\n              itemNode = {\r\n                id: nanoid(),\r\n                key: itemKey,\r\n                type: NODE_TYPE.FINAL_PRODUCT,\r\n                multiplier: recipeAmount,\r\n              }\r\n              graph.nodes[itemKey] = itemNode;\r\n            } else {\r\n              graph.nodes[itemKey].multiplier += recipeAmount;\r\n            }\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: itemNode.id,\r\n              productionRate: recipeAmount,\r\n            });\r\n          } \r\n\r\n          if (productionInfo.amount < EPSILON) {\r\n            j++\r\n            continue;\r\n          }\r\n\r\n          if (usageInfo.amount <= productionInfo.amount) {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: usageInfo.amount,\r\n            });\r\n            productionInfo.amount -= usageInfo.amount;\r\n            usageInfo.amount = 0;\r\n          } else {\r\n            graph.edges.push({\r\n              key: itemKey,\r\n              from: productionNode.id,\r\n              to: usageNode.id,\r\n              productionRate: productionInfo.amount,\r\n            });\r\n            usageInfo.amount -= productionInfo.amount;\r\n            productionInfo.amount = 0;\r\n          }\r\n          \r\n          if (usageInfo.amount < EPSILON) {\r\n            i++;\r\n            continue nextDemand;\r\n          }\r\n          j++;\r\n        }\r\n        break;\r\n      }\r\n\r\n      while (i < usedBy.length) {\r\n        const usageInfo = usedBy[i];\r\n        const usageNode = graph.nodes[usageInfo.recipeKey];\r\n        if (usageInfo.amount > EPSILON && this.inputs[itemKey]) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            const inputInfo = this.inputs[itemKey];\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: inputInfo.type,\r\n              multiplier: usageInfo.amount,\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += usageInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: itemNode.id,\r\n            to: usageNode.id,\r\n            productionRate: usageInfo.amount,\r\n          });\r\n          usageInfo.amount = 0;\r\n        }\r\n        i++;\r\n      }\r\n\r\n      while (j < producedBy.length) {\r\n        const productionInfo = producedBy[j];\r\n        const productionNode = graph.nodes[productionInfo.recipeKey];\r\n        if (productionInfo.amount > EPSILON) {\r\n          let itemNode = graph.nodes[itemKey];\r\n          if (!itemNode) {\r\n            let nodeType = NODE_TYPE.SIDE_PRODUCT;\r\n            if (this.rateTargets[itemKey] || this.maximizeTargets.find((t) => t.key === itemKey)) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            } else if (this.hasPointsTarget && items[itemKey].sinkPoints > 0) {\r\n              nodeType = NODE_TYPE.FINAL_PRODUCT;\r\n            }\r\n            itemNode = {\r\n              id: nanoid(),\r\n              key: itemKey,\r\n              type: nodeType,\r\n              multiplier: productionInfo.amount\r\n            };\r\n            graph.nodes[itemKey] = itemNode;\r\n          } else {\r\n            itemNode.multiplier += productionInfo.amount;\r\n          }\r\n          graph.edges.push({\r\n            key: itemKey,\r\n            from: productionNode.id,\r\n            to: itemNode.id,\r\n            productionRate: productionInfo.amount,\r\n          });\r\n          productionInfo.amount = 0;\r\n        }\r\n        j++;\r\n      }\r\n    }\r\n\r\n    return graph;\r\n  }\r\n\r\n  private generateProductionReport(productionGraph: ProductionGraph): Report {\r\n    const report: Report = {\r\n      pointsProduced: 0,\r\n      powerUsageEstimate: 0,\r\n      resourceEfficiencyScore: 0,\r\n      totalBuildArea: 0,\r\n      estimatedFoundations: 0,\r\n      buildingsUsed: {},\r\n      totalMaterialCost: {},\r\n    };\r\n\r\n    for (const [key, node] of Object.entries(productionGraph.nodes)) {\r\n      if (node.type === NODE_TYPE.RECIPE) {\r\n        const recipeInfo = recipes[key];\r\n        const buildingKey = recipeInfo.producedIn;\r\n        const buildingInfo = buildings[buildingKey];\r\n\r\n        report.powerUsageEstimate += node.multiplier * buildingInfo.power;\r\n        report.totalBuildArea += Math.ceil(node.multiplier) * buildingInfo.area;\r\n        if (!report.buildingsUsed[buildingKey]) {\r\n          report.buildingsUsed[buildingKey] = {\r\n            count: Math.ceil(node.multiplier),\r\n            materialCost: {},\r\n          };\r\n        } else {\r\n          report.buildingsUsed[buildingKey].count += Math.ceil(node.multiplier);\r\n        }\r\n\r\n        for (const ingredient of buildingInfo.buildCost) {\r\n          const amount = Math.ceil(node.multiplier) * ingredient.quantity;\r\n          if (!report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass]) {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.buildingsUsed[buildingKey].materialCost[ingredient.itemClass] += amount;\r\n          }\r\n          if (!report.totalMaterialCost[ingredient.itemClass]) {\r\n            report.totalMaterialCost[ingredient.itemClass] = amount;\r\n          } else {\r\n            report.totalMaterialCost[ingredient.itemClass] += amount;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      const itemInfo = items[key];\r\n      if (node.type === NODE_TYPE.FINAL_PRODUCT) {\r\n        report.pointsProduced += node.multiplier * itemInfo.sinkPoints;\r\n      } else if (node.type === NODE_TYPE.RESOURCE) {\r\n        report.resourceEfficiencyScore += node.multiplier * this.inputs[key].weight;\r\n      }\r\n    }\r\n\r\n    report.estimatedFoundations = Math.ceil(2 * (report.totalBuildArea / 64));\r\n\r\n    return report;\r\n  }\r\n}\r\n","import React, { createContext, useContext, useReducer, useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport { resources, recipes, items } from '../../data'\r\nimport { POINTS_ITEM_KEY } from '../../utilities/production-solver';\r\n\r\nexport const FACTORY_SETTINGS_VERSION = 'v1_U5';\r\nexport const MAX_PRIORITY = 20;\r\n\r\n// TYPES\r\nexport type ProductionItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  mode: 'per-minute'|'maximize'|string,\r\n  value: string,\r\n};\r\n\r\nexport type WeightingOptions = {\r\n  resources: string,\r\n  power: string,\r\n  complexity: string,\r\n};\r\n\r\nexport type InputItemOptions = {\r\n  key: string,\r\n  itemKey: string,\r\n  value: string,\r\n  weight: string,\r\n  unlimited: boolean,\r\n};\r\n\r\nexport type RecipeMap = {\r\n  [key: string]: boolean,\r\n};\r\n\r\nexport type FactoryOptions = {\r\n  version: string,\r\n  key: string,\r\n  productionItems: ProductionItemOptions[],\r\n  inputItems: InputItemOptions[],\r\n  inputResources: InputItemOptions[],\r\n  allowHandGatheredItems: boolean,\r\n  weightingOptions: WeightingOptions,\r\n  allowedRecipes: RecipeMap,\r\n};\r\n\r\nexport type ProductionContextType = {\r\n  state: FactoryOptions,\r\n  loaded: boolean,\r\n  dispatch: React.Dispatch<FactoryAction>,\r\n}\r\n\r\n\r\n// CONTEXT\r\nexport const ProductionContext = createContext<ProductionContextType | null>(null);\r\nProductionContext.displayName = 'ProductionContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useProductionContext() {\r\n  const ctx = useContext(ProductionContext);\r\n  if (!ctx) {\r\n    throw new Error('ProductionContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// DEFAULTS\r\nfunction getDefaultProductionItem(): ProductionItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    mode: 'per-minute',\r\n    value: '10',\r\n  });\r\n}\r\n\r\nfunction getDefaultInputItem(): InputItemOptions {\r\n  return ({\r\n    key: nanoid(),\r\n    itemKey: '',\r\n    value: '10',\r\n    weight: '0',\r\n    unlimited: false,\r\n  });\r\n}\r\n\r\nconst ORDERED_RESOURCES = [\r\n  'Desc_OreIron_C',\r\n  'Desc_OreCopper_C',\r\n  'Desc_Stone_C',\r\n  'Desc_Coal_C',\r\n  'Desc_OreGold_C',\r\n  'Desc_RawQuartz_C',\r\n  'Desc_Sulfur_C',\r\n  'Desc_LiquidOil_C',\r\n  'Desc_OreBauxite_C',\r\n  'Desc_OreUranium_C',\r\n  'Desc_NitrogenGas_C',\r\n  'Desc_Water_C',\r\n];\r\nfunction getInitialInputResources(): InputItemOptions[] {\r\n  return Object.entries(resources)\r\n    .map(([key, data]) => {\r\n      let value = '0';\r\n      let unlimited = false;\r\n      if (key === 'Desc_Water_C') {\r\n        unlimited = true;\r\n      } else {\r\n        value = String(data.maxExtraction);\r\n      }\r\n      return {\r\n        key: key,\r\n        itemKey: key,\r\n        value,\r\n        weight: String(data.relativeValue),\r\n        unlimited,\r\n      };\r\n    })\r\n    .sort((a, b) => {\r\n      let aIndex = ORDERED_RESOURCES.findIndex((r) => r === a.itemKey);\r\n      if (aIndex === -1) aIndex = Infinity;\r\n      let bIndex = ORDERED_RESOURCES.findIndex((r) => r === b.itemKey);\r\n      if (bIndex === -1) bIndex = Infinity;\r\n      return aIndex < bIndex ? -1 : 1;\r\n    });\r\n}\r\n\r\nfunction getInitialWeightingOptions(): WeightingOptions {\r\n  return {\r\n    resources: '1000',\r\n    power: '5',\r\n    complexity: '3',\r\n  };\r\n}\r\n\r\nfunction getInitialAllowedRecipes(): RecipeMap {\r\n  const recipeMap: RecipeMap = {};\r\n  Object.entries(recipes).forEach(([key, data]) => {\r\n    recipeMap[key] = !data.isAlternate;\r\n  });\r\n  return recipeMap;\r\n}\r\n\r\nfunction getInitialState(): FactoryOptions {\r\n  return {\r\n    version: FACTORY_SETTINGS_VERSION,\r\n    key: nanoid(),\r\n    productionItems: [],\r\n    inputItems: [],\r\n    inputResources: getInitialInputResources(),\r\n    allowHandGatheredItems: false,\r\n    weightingOptions: getInitialWeightingOptions(),\r\n    allowedRecipes: getInitialAllowedRecipes(),\r\n  };\r\n}\r\n\r\n\r\n// REDUCER\r\nexport type FactoryAction =\r\n  | { type: 'RESET_FACTORY' }\r\n  | { type: 'ADD_PRODUCTION_ITEM' }\r\n  | { type: 'DELETE_PRODUCTION_ITEM', key: string }\r\n  | { type: 'SET_PRODUCTION_ITEM', data: { key: string, itemKey: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_AMOUNT', data: { key: string, amount: string } }\r\n  | { type: 'SET_PRODUCTION_ITEM_MODE', data: { key: string, mode: string } }\r\n  | { type: 'ADD_INPUT_ITEM' }\r\n  | { type: 'DELETE_INPUT_ITEM', key: string }\r\n  | { type: 'UPDATE_INPUT_ITEM', data: InputItemOptions }\r\n  | { type: 'UPDATE_INPUT_RESOURCE', data: InputItemOptions }\r\n  | { type: 'SET_RESOURCES_TO_MAP_LIMITS' }\r\n  | { type: 'SET_RESOURCES_TO_0' }\r\n  | { type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: boolean }\r\n  | { type: 'UPDATE_WEIGHTING_OPTIONS', data: WeightingOptions }\r\n  | { type: 'SET_ALL_WEIGHTS_DEFAULT' }\r\n  | { type: 'SET_RECIPE_ACTIVE', key: string, active: boolean }\r\n  | { type: 'MASS_SET_RECIPES_ACTIVE', alternates: boolean, active: boolean }\r\n  | { type: 'LOAD_FROM_QUERY_PARAM' };\r\n\r\nfunction reducer(state: FactoryOptions, action: FactoryAction): FactoryOptions {\r\n  switch (action.type) {\r\n    case 'RESET_FACTORY': {\r\n      return getInitialState();\r\n    }\r\n    case 'ADD_PRODUCTION_ITEM': {\r\n      const newProductionItems = [\r\n        ...state.productionItems,\r\n        getDefaultProductionItem(),\r\n      ];\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'DELETE_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.itemKey = action.data.itemKey;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_AMOUNT': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.value = action.data.amount;\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'SET_PRODUCTION_ITEM_MODE': {\r\n      const newProductionItems = state.productionItems\r\n        .map((item) => {\r\n          if (item.key === action.data.key) {\r\n            const newItem = { ...item };\r\n            newItem.mode = action.data.mode;\r\n            if (newItem.mode !== item.mode) {\r\n              if (newItem.mode === 'per-minute') {\r\n                newItem.value = '10';\r\n              } else if (newItem.mode === 'maximize') {\r\n                let nextPriority = MAX_PRIORITY;\r\n                while (nextPriority && nextPriority > 0) {\r\n                  // eslint-disable-next-line no-loop-func\r\n                  const priorityTaken = !!state.productionItems.find((i) => i.mode === 'maximize' && i.value === String(nextPriority));\r\n                  if (!priorityTaken) {\r\n                    break;\r\n                  }\r\n                  nextPriority--;\r\n                }\r\n                if (nextPriority > 0) {\r\n                  newItem.value = String(nextPriority);\r\n                } else {\r\n                  newItem.value = `${MAX_PRIORITY}`;\r\n                }\r\n              } else if (item.mode === 'per-minute' || item.mode === 'maximize') {\r\n                newItem.value = '1';\r\n              }\r\n            }\r\n            return newItem;\r\n          }\r\n          return item;\r\n        });\r\n      return { ...state, productionItems: newProductionItems };\r\n    }\r\n    case 'ADD_INPUT_ITEM': {\r\n      const newInputItems = [\r\n        ...state.inputItems,\r\n        getDefaultInputItem(),\r\n      ];\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'DELETE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .filter((i) => i.key !== action.key);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_ITEM': {\r\n      const newInputItems = state.inputItems\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputItems: newInputItems };\r\n    }\r\n    case 'UPDATE_INPUT_RESOURCE': {\r\n      const newInputResources = state.inputResources\r\n        .map((i) => i.key === action.data.key ? action.data : i);\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_MAP_LIMITS': {\r\n      const newInputResources = getInitialInputResources();\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RESOURCES_TO_0': {\r\n      const newInputResources = state.inputResources\r\n        .map((data) => ({ ...data, value: '0', unlimited: false }));\r\n      return { ...state, inputResources: newInputResources };\r\n    }\r\n    case 'SET_ALLOW_HAND_GATHERED_ITEMS': {\r\n      return { ...state, allowHandGatheredItems: action.active };\r\n    }\r\n    case 'UPDATE_WEIGHTING_OPTIONS': {\r\n      const newWeightingOptions = { ...action.data };\r\n      return { ...state, weightingOptions: newWeightingOptions };\r\n    }\r\n    case 'SET_ALL_WEIGHTS_DEFAULT': {\r\n      const newWeightingOptions = getInitialWeightingOptions();\r\n      const newInputResources = state.inputResources\r\n        .map((i) => ({ ...i, weight: String(resources[i.itemKey].relativeValue) }));\r\n      return { ...state, weightingOptions: newWeightingOptions, inputResources: newInputResources };\r\n    }\r\n    case 'SET_RECIPE_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      newAllowedRecipes[action.key] = action.active;\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'MASS_SET_RECIPES_ACTIVE': {\r\n      const newAllowedRecipes = { ...state.allowedRecipes };\r\n      Object.keys(newAllowedRecipes).forEach((key) => {\r\n        if (action.alternates && recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        } else if (!action.alternates && !recipes[key].isAlternate) {\r\n          newAllowedRecipes[key] = action.active;\r\n        }\r\n      })\r\n      return { ...state, allowedRecipes: newAllowedRecipes };\r\n    }\r\n    case 'LOAD_FROM_QUERY_PARAM': {\r\n      const params = new URLSearchParams(window.location.search);\r\n      const encodedState = params.get('f');\r\n      if (encodedState) {\r\n        try {\r\n          return decodeState(encodedState);\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction getItemSlug(itemKey: string) {\r\n  if (itemKey === POINTS_ITEM_KEY) {\r\n    return 'points';\r\n  }\r\n  return items[itemKey].slug;\r\n}\r\n\r\nfunction getItemBySlug(slug: string) {\r\n  if (slug === 'points') {\r\n    return POINTS_ITEM_KEY;\r\n  }\r\n  const itemEntry = Object.entries(items).find(([key, item]) => item.slug === slug);\r\n  if (itemEntry) {\r\n    return itemEntry[0];\r\n  }\r\n  throw new Error('INVALID ITEM SLUG');\r\n}\r\n\r\nfunction getModeSlug(mode: string) {\r\n  if (mode === 'per-minute') return 'per_minute';\r\n  if (mode === 'maximize') return 'maximize';\r\n  const recipeKey = mode;\r\n  const recipeInfo = recipes[recipeKey];\r\n  if (recipeInfo) {\r\n    return recipeInfo.slug;\r\n  } else {\r\n    return 'null';\r\n  }\r\n}\r\n\r\nfunction getModeBySlug(slug: string) {\r\n  if (slug === 'per_minute') return 'per-minute';\r\n  if (slug === 'maximize') return 'maximize';\r\n  const recipeEntry = Object.entries(recipes).find(([key, recipe]) => recipe.slug === slug);\r\n  if (recipeEntry) {\r\n    return recipeEntry[0];\r\n  }\r\n  throw new Error('INVALID RECIPE SLUG');\r\n}\r\n\r\nconst SEP0 = ',';\r\nconst SEP1 = '|';\r\nconst SEP2 = ':';\r\n\r\n// ENCODE/DECODE\r\nfunction encodeState(state: FactoryOptions): string {\r\n  const fields: string[] = [];\r\n\r\n  fields.push(state.version);\r\n\r\n  const allowedRecipesBits = Object.keys((state.allowedRecipes))\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .map((key) => state.allowedRecipes[key] ? '1' : '0')\r\n    .join('');\r\n  fields.push(BigInt(`0b${allowedRecipesBits}`).toString(16));\r\n\r\n  const productionItemsField: string[] = [];\r\n  state.productionItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    productionItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${getModeSlug(item.mode)}${SEP2}${item.value}`);\r\n  });\r\n  fields.push(productionItemsField.join(SEP1));\r\n\r\n  const inputItemsField: string[] = [];\r\n  state.inputItems.forEach((item) => {\r\n    if (!item.itemKey) return;\r\n    inputItemsField.push(`${getItemSlug(item.itemKey)}${SEP2}${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputItemsField.join(SEP1));\r\n\r\n  const inputResourcesField: string[] = [];\r\n  state.inputResources.forEach((item) => {\r\n    inputResourcesField.push(`${item.value}${SEP2}${item.weight}${SEP2}${item.unlimited ? '1' : '0'}`);\r\n  });\r\n  fields.push(inputResourcesField.join(SEP1));\r\n\r\n  fields.push(`${state.allowHandGatheredItems ? '1' : '0'}`);\r\n\r\n  fields.push(`${state.weightingOptions.resources}${SEP2}${state.weightingOptions.power}${SEP2}${state.weightingOptions.complexity}`);\r\n\r\n  return fields.join(SEP0);\r\n}\r\n\r\nfunction decodeState(stateStr: string): FactoryOptions {\r\n  const newState: FactoryOptions = getInitialState();\r\n\r\n  const fields = stateStr.split(SEP0);\r\n  if (fields[0] !== FACTORY_SETTINGS_VERSION) throw new Error('VERSION MISMATCH');\r\n  if (fields.length !== 7) throw new Error('INVALID DATA [BAD FIELDS]');\r\n\r\n  const allowedRecipesBits = BigInt(`0x${fields[1]}`)\r\n    .toString(2)\r\n    .padStart(Object.keys(newState.allowedRecipes).length, '0')\r\n    .split('')\r\n    .map((b) => !!parseInt(b));\r\n  Object.keys(newState.allowedRecipes)\r\n    .sort((a, b) => {\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    })\r\n    .forEach((key, i) => {\r\n      newState.allowedRecipes[key] = !!allowedRecipesBits[i];\r\n    });\r\n\r\n  const productionItemsStrings = fields[2].split(SEP1);\r\n  if (productionItemsStrings[0]) {\r\n    productionItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 3) throw new Error('INVALID DATA [productionItems]');\r\n      newState.productionItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        mode: getModeBySlug(values[1]),\r\n        value: values[2],\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputItemsStrings = fields[3].split(SEP1);\r\n  if (inputItemsStrings[0]) {\r\n    inputItemsStrings.forEach((str) => {\r\n      const values = str.split(SEP2);\r\n      if (values.length !== 4) throw new Error('INVALID DATA [inputItems]');\r\n      newState.inputItems.push({\r\n        key: nanoid(),\r\n        itemKey: getItemBySlug(values[0]),\r\n        value: values[1],\r\n        weight: values[2],\r\n        unlimited: !!parseInt(values[3]),\r\n      });\r\n    });\r\n  }\r\n\r\n  const inputResourcesStrings = fields[4].split(SEP1);\r\n  newState.inputResources.forEach((resourceOptions, i) => {\r\n    const values = inputResourcesStrings[i].split(SEP2);\r\n    if (values.length !== 3) throw new Error('INVALID DATA [inputResources]');\r\n    resourceOptions.value = values[0];\r\n    resourceOptions.weight = values[1];\r\n    resourceOptions.unlimited = !!parseInt(values[2]);\r\n  });\r\n\r\n  newState.allowHandGatheredItems = !!parseInt(fields[5]);\r\n\r\n  const weightingOptionsStrings = fields[6].split(SEP2);\r\n  if (weightingOptionsStrings.length !== 3) throw new Error('INVALID DATA [weightingOptions]');\r\n  newState.weightingOptions.resources = weightingOptionsStrings[0];\r\n  newState.weightingOptions.power = weightingOptionsStrings[1];\r\n  newState.weightingOptions.complexity = weightingOptionsStrings[2];\r\n\r\n  return newState;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype PropTypes = { children: React.ReactNode };\r\nexport const ProductionProvider = ({ children }: PropTypes) => {\r\n  const [state, dispatch] = useReducer(reducer, getInitialState());\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const prevState = usePrevious(state);\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      dispatch({ type: 'LOAD_FROM_QUERY_PARAM' });\r\n      setLoaded(true);\r\n    }\r\n  }, [loaded]);\r\n\r\n  useEffect(() => {\r\n    if (prevState !== state) {\r\n      const encodedState = encodeState(state);\r\n      window.history.replaceState(null, '', window.location.pathname + '?f=' + encodedState);\r\n    }\r\n  }, [prevState, state]);\r\n\r\n  return (\r\n    <ProductionContext.Provider value={{ state, loaded, dispatch }}>\r\n      {children}\r\n    </ProductionContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useMantineTheme } from '@mantine/core';\r\n\r\nexport type DrawerContextType = {\r\n  rootNode: HTMLDivElement | null,\r\n};\r\n\r\n\r\n// CONTEXT\r\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\r\nDrawerContext.displayName = 'DrawerContext';\r\n\r\n\r\n// HELPER HOOK\r\nexport function useDrawerContext() {\r\n  const ctx = useContext(DrawerContext);\r\n  if (!ctx) {\r\n    throw new Error('DrawerContext is null');\r\n  }\r\n  return ctx;\r\n}\r\n\r\n\r\n// PROVIDER\r\ntype Props = {\r\n  children: React.ReactNode,\r\n};\r\nexport const DrawerProvider = (props: Props) => {\r\n  const { children } = props;\r\n  const [rootNode, setRootNode] = useState<HTMLDivElement | null>(null);\r\n  const theme = useMantineTheme();\r\n\r\n  function setRef(ref: HTMLDivElement | null) {\r\n    setRootNode((prevState) => {\r\n      if (prevState !== ref) return ref;\r\n      return prevState;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ rootNode }}>\r\n      <DrawerRoot ref={setRef} topOffset={theme.other.headerHeight} />\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  );\r\n}\r\n\r\nconst DrawerRoot = styled.div<{ topOffset: string }>`\r\n  position: fixed;\r\n  top: ${({ topOffset }) => topOffset};\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  z-index: 1000;\r\n  margin: 0;\r\n  padding: 0;\r\n  pointer-events: none;\r\n`;\r\n","import React from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\ninterface Props {\r\n  children: React.ReactNode,\r\n  rootNode: Element | null,\r\n  key?: string,\r\n}\r\n\r\nconst Portal = (props: Props) => {\r\n  const { children, rootNode, key } = props;\r\n  if (rootNode) {\r\n    return (\r\n      createPortal(children, rootNode, key)\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Portal;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDrawerContext } from '../../contexts/drawer';\r\nimport Portal from '../Portal';\r\nimport { UnstyledButton } from '@mantine/core';\r\n\r\ninterface Props {\r\n  open?: boolean,\r\n  onToggle?: (newState: boolean) => void,\r\n  children: React.ReactNode,\r\n}\r\n\r\nconst Drawer = (props: Props) => {\r\n  const { open, onToggle, children } = props;\r\n  const ctx = useDrawerContext();\r\n  return (\r\n    <Portal rootNode={ctx.rootNode}>\r\n      <DrawerDimmer open={!!open} onClick={() => { onToggle?.(!open); }} />\r\n      <DrawerContainer open={!!open}>\r\n        <DrawerToggle onClick={() => { onToggle?.(!open); }}>\r\n          <ToggleLabel>\r\n            <ToggleLabelText>Factory Options</ToggleLabelText>\r\n          </ToggleLabel>\r\n        </DrawerToggle>\r\n        <DrawerContent aria-hidden={!open}>\r\n          {children}\r\n        </DrawerContent>\r\n      </DrawerContainer>\r\n    </Portal>\r\n  )\r\n};\r\n\r\nexport default Drawer;\r\n\r\nconst DrawerDimmer = styled.div<{ open: boolean }>`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  right: 0px;\r\n  margin: 0;\r\n  padding: 0;\r\n  background: #000;\r\n  opacity: ${({ open }) => open ? 0.7 : 0.0 };\r\n  transition: opacity 550ms;\r\n  pointer-events: ${({ open }) => open ? 'auto' : 'none' };\r\n`;\r\n\r\nconst DrawerContainer = styled.div<{ open: boolean }>`\r\n  position: relative;\r\n  top: 0px;\r\n  left: ${({ open, theme }) => (open ? '0px' : `-${theme.other.drawerOpenWidth}`)};\r\n  width: ${({ theme }) => theme.other.drawerOpenWidth};\r\n  height: 100%;\r\n  background: ${({ theme }) => theme.colors.background[0]};\r\n  transition: left 550ms;\r\n  transition-timing-function: cubic-bezier(.68, -0.21, .38, 1.26);\r\n  pointer-events: auto;\r\n`;\r\n\r\nconst DrawerToggle = styled(UnstyledButton)`\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  top: 0px;\r\n  bottom: 0px;\r\n  right: -25px;\r\n  width: 25px;\r\n  background: ${({ theme }) => theme.colors.primary[7]};\r\n`;\r\n\r\nconst ToggleLabel = styled(UnstyledButton)`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  right: -20px;\r\n  width: 40px;\r\n  height: 200px;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  writing-mode: vertical-rl;\r\n  text-orientation: mixed;\r\n  background: ${({ theme }) => theme.colors.primary[7]};\r\n  color: ${({ theme }) => theme.white};\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -25px;\r\n    right: 3px;\r\n    width: 40px;\r\n    height: 28px;\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n    transform: rotate(60deg);\r\n  }\r\n\r\n  ::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -25px;\r\n    right: 3px;\r\n    width: 40px;\r\n    height: 28px;\r\n    background: ${({ theme }) => theme.colors.primary[7]};\r\n    transform: rotate(-60deg);\r\n  }\r\n`;\r\n\r\nconst ToggleLabelText = styled.span`\r\n  position: relative;\r\n  left: -8px;\r\n`;\r\n\r\nconst DrawerContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from 'react';\r\nimport { Button, Select, TextInput, Group, Text } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\nimport { items, recipes, resources } from '../../../../data';\r\nimport { MAX_PRIORITY, useProductionContext } from '../../../../contexts/production';\r\nimport { POINTS_ITEM_KEY } from '../../../../utilities/production-solver';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\nitemOptions.unshift({\r\n  value: POINTS_ITEM_KEY,\r\n  label: 'AWESOME Sink Points (x1000)'\r\n});\r\n\r\nconst baseModeOptions = [\r\n  { value: 'per-minute', label: 'Items Per Min' },\r\n  { value: 'maximize', label: 'Maximize Output' },\r\n];\r\n\r\nconst priorityOptions = Array(MAX_PRIORITY)\r\n  .fill('')\r\n  .map((_, i) => ({ value: `${i + 1}`, label: `Priority: ${i + 1}` }))\r\n  .reverse();\r\n\r\nconst ProductionTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.productionItems.map((data) => {\r\n      const modeOptions = [...baseModeOptions];\r\n      if (data.itemKey) {\r\n        const itemInfo = items[data.itemKey];\r\n        const recipeList = itemInfo?.producedFromRecipes || [];\r\n        recipeList.forEach((recipeKey) => {\r\n          const recipeInfo = recipes[recipeKey];\r\n          const target = recipeInfo?.products.find((p) => p.itemClass === data.itemKey);\r\n          if (target) {\r\n            const name = itemInfo.name === recipeInfo.name ? recipeInfo.name.replace('Alternate: ', '') : 'Base Recipe';\r\n            modeOptions.push({ value: recipeKey, label: `${name} [${target.perMinute}/min]` });\r\n          }\r\n        });\r\n      }\r\n      return (\r\n        <React.Fragment key={data.key}>\r\n          <Group>\r\n            <Select\r\n              placeholder=\"Select an item\"\r\n              clearable\r\n              searchable\r\n              data={itemOptions}\r\n              value={data.itemKey ? data.itemKey : ''}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM',\r\n                  data: { key: data.key, itemKey: (value as any) },\r\n                });\r\n              }}\r\n            />\r\n            <Button\r\n              color='danger'\r\n              onClick={() => { ctx.dispatch({ type: 'DELETE_PRODUCTION_ITEM', key: data.key }); }}\r\n            >\r\n              <Trash2 />\r\n            </Button>\r\n          </Group>\r\n          <Group>\r\n            {\r\n              data.mode === 'maximize'\r\n                ? (\r\n                  <Select\r\n                    data={priorityOptions}\r\n                    value={data.value}\r\n                    onChange={(value) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: (value as any) },\r\n                      });\r\n                    }}\r\n                  />\r\n                )\r\n                : (\r\n                  <TextInput\r\n                    className='no-spinner'\r\n                    type='number'\r\n                    min='0'\r\n                    step='1'\r\n                    value={data.value}\r\n                    onChange={(e) => {\r\n                      ctx.dispatch({\r\n                        type: 'SET_PRODUCTION_ITEM_AMOUNT',\r\n                        data: { key: data.key, amount: e.currentTarget.value },\r\n                      });\r\n                    }}\r\n                  />\r\n                )\r\n            }\r\n            <Select\r\n              data={modeOptions}\r\n              value={data.mode}\r\n              onChange={(value) => {\r\n                ctx.dispatch({\r\n                  type: 'SET_PRODUCTION_ITEM_MODE',\r\n                  data: { key: data.key, mode: (value as any) },\r\n                });\r\n              }}\r\n            />\r\n          </Group>\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text>\r\n        Select the items you want to produce. When maximizing multiple outputs, higher priority items will be maximized first. When selecting a recipe, the factory will be forced to use that recipe for the final output.\r\n      </Text>\r\n      {renderItemInputs()}\r\n      <Button onClick={() => { ctx.dispatch({ type: 'ADD_PRODUCTION_ITEM' }) }}>\r\n        + Add Product\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionTab;\r\n","import React from 'react';\r\nimport { Button, Select, TextInput, Checkbox, Group, Title, Text, Divider } from '@mantine/core';\r\nimport { Trash2 } from 'react-feather';\r\nimport { items, resources } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nconst itemOptions = Object.keys(items)\r\n  .filter((key) => items[key].producedFromRecipes.length !== 0 && items[key].usedInRecipes.length !== 0 && !resources[key])\r\n  .map((key) => ({\r\n    value: key,\r\n    label: items[key].name,\r\n  }))\r\n  .sort((a, b) => {\r\n    return a.label > b.label ? 1 : -1;\r\n  });\r\n\r\n\r\nconst InputsTab = () => {\r\n  const ctx = useProductionContext();\r\n\r\n  function renderItemInputs() {\r\n    return ctx.state.inputItems.map((data) => (\r\n      <Group key={data.key}>\r\n        <Select\r\n          placeholder=\"Select an item\"\r\n          clearable\r\n          searchable\r\n          data={itemOptions}\r\n          value={data.itemKey ? data.itemKey : ''}\r\n          onChange={(value) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_ITEM',\r\n              data: { ...data, itemKey: (value as string) },\r\n            });\r\n          }}\r\n        />\r\n        <TextInput\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={data.value}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_ITEM',\r\n              data: { ...data, value: e.currentTarget.value },\r\n            });\r\n          }}\r\n        />\r\n        <Checkbox\r\n          className='label'\r\n          style={{ fontWeight: 'normal' }}\r\n          label='Unlimited'\r\n          checked={data.unlimited}\r\n          onChange={() => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_ITEM',\r\n              data: { ...data, unlimited: !data.unlimited },\r\n            });\r\n          }}\r\n        />\r\n        <Button\r\n          color='danger'\r\n          onClick={() => { ctx.dispatch({ type: 'DELETE_INPUT_ITEM', key: data.key }); }}\r\n        >\r\n          <Trash2 />\r\n        </Button>\r\n      </Group>\r\n    ));\r\n  }\r\n\r\n  function renderWeightInputs() {\r\n    const weightingOptions = ctx.state.weightingOptions;\r\n    return (\r\n      <>\r\n        <Group>\r\n          <label>\r\n            Resource Efficiency\r\n          </label>\r\n          <TextInput\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.resources}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, resources: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group>\r\n          <label>\r\n            Power Efficiency\r\n          </label>\r\n          <TextInput\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.power}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, power: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n        <Group>\r\n          <label>\r\n            Complexity\r\n          </label>\r\n          <TextInput\r\n            className='no-spinner'\r\n            type='number'\r\n            min='0'\r\n            step='1'\r\n            value={weightingOptions.complexity}\r\n            onChange={(e) => {\r\n              ctx.dispatch({\r\n                type: 'UPDATE_WEIGHTING_OPTIONS',\r\n                data: { ...weightingOptions, complexity: e.currentTarget.value },\r\n              });\r\n            }}\r\n          />\r\n        </Group>\r\n      </>\r\n    )\r\n  }\r\n\r\n  function renderResourceInputs() {\r\n    return ctx.state.inputResources.map((data) => (\r\n      <Group key={data.key}>\r\n        <label>\r\n          {items[data.itemKey].name}\r\n        </label>\r\n        <TextInput\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={data.value}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_RESOURCE',\r\n              data: { ...data, value: e.currentTarget.value },\r\n            });\r\n          }}\r\n          disabled={data.unlimited}\r\n        />\r\n        <Checkbox\r\n          label='Unlimited'\r\n          checked={data.unlimited}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_RESOURCE',\r\n              data: { ...data, unlimited: e.currentTarget.checked },\r\n            });\r\n          }}\r\n        />\r\n        <TextInput\r\n          className='no-spinner'\r\n          type='number'\r\n          min='0'\r\n          step='1'\r\n          value={data.weight}\r\n          onChange={(e) => {\r\n            ctx.dispatch({\r\n              type: 'UPDATE_INPUT_RESOURCE',\r\n              data: { ...data, weight: e.currentTarget.value },\r\n            });\r\n          }}\r\n          label='Weight'\r\n        />\r\n      </Group>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Title order={3}>TextInput Items</Title>\r\n      <Text>\r\n        Select the items that you already have available and don't need to produce in this factory.\r\n      </Text>\r\n        {renderItemInputs()}\r\n        <Button onClick={() => { ctx.dispatch({ type: 'ADD_INPUT_ITEM' }) }}>\r\n          + Add TextInput\r\n        </Button>\r\n      <Divider />\r\n      <Title order={3}>Weighting Options</Title>\r\n      <Text>\r\n        Adjust the weights affecting the importance of various properties of the factory. A value of 0 indicates that that property is not considered during factory layout.\r\n      </Text>\r\n      <Button onClick={() => { ctx.dispatch({ type: 'SET_ALL_WEIGHTS_DEFAULT' }) }}>\r\n        Reset all weights\r\n      </Button>\r\n      {renderWeightInputs()}\r\n      <Divider />\r\n      <Title order={3}>Raw Resources</Title>\r\n      <Text>\r\n        Select the raw resources that are available to your factory. The default values are set to the map limits. The weight value is a number representing how valuable that resource is when comparing recipes. The defaults are calculated automatically according to node rarity.\r\n      </Text>\r\n      <Button onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_MAP_LIMITS' }) }}>\r\n        Set to Maximum\r\n      </Button>\r\n      <Button onClick={() => { ctx.dispatch({ type: 'SET_RESOURCES_TO_0' }) }}>\r\n        Set to 0\r\n      </Button>\r\n      <Checkbox\r\n        label='Allow hand-gathered resources'\r\n        checked={ctx.state.allowHandGatheredItems}\r\n        onChange={(e) => { ctx.dispatch({ type: 'SET_ALLOW_HAND_GATHERED_ITEMS', active: e.currentTarget.checked }) }}\r\n        />\r\n      {renderResourceInputs()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputsTab;\r\n","import React, { useState, useMemo, useCallback } from 'react';\r\nimport { List, Checkbox, TextInput, Button, Text, Title, Grid, Col } from '@mantine/core';\r\nimport { Search } from 'react-feather';\r\nimport { recipes } from '../../../../data';\r\nimport { useProductionContext } from '../../../../contexts/production';\r\n\r\nconst cleanAltNameRegex = /^Alternate: /;\r\nconst baseRecipes: { key: string, label: string }[] = [];\r\nconst altRecipes: { key: string, label: string }[] = [];\r\nObject.entries(recipes)\r\n  .forEach(([key, data]) => {\r\n    if (data.isAlternate) {\r\n      altRecipes.push({\r\n        key,\r\n        label: data.name.replace(cleanAltNameRegex, ''),\r\n      });\r\n    } else {\r\n      baseRecipes.push({\r\n        key,\r\n        label: data.name,\r\n      });\r\n    }\r\n  });\r\nbaseRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\naltRecipes.sort((a, b) => (a.label > b.label ? 1 : -1));\r\n\r\nconst RecipesTab = () => {\r\n  const ctx = useProductionContext();\r\n  const [searchValue, setSearchValue] = useState('');\r\n\r\n  const renderRecipeList = useCallback((recipeList: { key: string, label: string }[]) => {\r\n    return recipeList.map(({ key, label }) => ({\r\n      label,\r\n      component: (\r\n        <List.Item key={key}>\r\n          <Checkbox\r\n            label={label}\r\n            checked={ctx.state.allowedRecipes[key]}\r\n            onChange={() => {\r\n              ctx.dispatch({\r\n                type: 'SET_RECIPE_ACTIVE',\r\n                key,\r\n                active: !ctx.state.allowedRecipes[key],\r\n              });\r\n            }}\r\n          />\r\n        </List.Item>\r\n      )\r\n    }));\r\n  }, [ctx]);\r\n\r\n  const renderedBaseRecipes = useMemo(() => renderRecipeList(baseRecipes), [renderRecipeList]);\r\n  const renderedAltRecipes = useMemo(() => renderRecipeList(altRecipes), [renderRecipeList]);\r\n\r\n  function renderRecipeOptions(alternates: boolean) {\r\n    const rendered = alternates ? renderedAltRecipes : renderedBaseRecipes\r\n    return (\r\n      <>\r\n        <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: true }) }}>\r\n          All\r\n        </Button>\r\n        <Button onClick={() => { ctx.dispatch({ type: 'MASS_SET_RECIPES_ACTIVE', alternates, active: false }) }}>\r\n          None\r\n        </Button>\r\n        <List listStyleType='none' spacing={6}>\r\n          {rendered.filter(({ label }) => label.toLowerCase().includes(searchValue)).map(({ component }) => component)}\r\n        </List>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text>\r\n        Select the recipes that you want to be considered in this factory.\r\n      </Text>\r\n      <TextInput\r\n        placeholder='Search...'\r\n        aria-label='search recipes'\r\n        icon={<Search />}\r\n        value={searchValue}\r\n        onChange={(e) => { setSearchValue(e.currentTarget.value); }}\r\n      />\r\n      <Grid grow>\r\n        <Col span={6}>\r\n          <Title order={3}>Alternate Recipes</Title>\r\n          {renderRecipeOptions(true)}\r\n        </Col>\r\n        <Col span={6}>\r\n          <Title order={3}>Base Recipes</Title>\r\n          {renderRecipeOptions(false)}\r\n        </Col>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipesTab;\r\n","import React from 'react';\r\nimport { Container, Tabs } from '@mantine/core';\r\nimport { TrendingUp, Shuffle, Box } from 'react-feather';\r\nimport ProductionTab from './ProductionTab';\r\nimport InputsTab from './InputsTab';\r\nimport RecipesTab from './RecipesTab';\r\n\r\nconst PlannerOptions = () => {\r\n  return (\r\n    <Tabs grow variant='outline'>\r\n      <Tabs.Tab label='Production' icon={<TrendingUp size={18} />}>\r\n        <Container>\r\n          <ProductionTab />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Inputs' icon={<Shuffle size={18} />}>\r\n        <Container>\r\n          <InputsTab />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Recipes' icon={<Box size={18} />}>\r\n        <Container>\r\n          <RecipesTab />\r\n        </Container>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerOptions;\r\n","import React, { useMemo, useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { nanoid } from 'nanoid';\r\nimport Cytoscape, { Stylesheet } from 'cytoscape';\r\nimport klay from 'cytoscape-klay';\r\nimport GraphVisualizer from 'react-cytoscapejs';\r\nimport { Text, Container, Center, Group } from '@mantine/core';\r\nimport { AlertCircle } from 'react-feather';\r\nimport { ProductionGraph, GraphNode, GraphEdge, NODE_TYPE } from '../../../../utilities/production-solver';\r\nimport { items, recipes, buildings } from '../../../../data';\r\n\r\nCytoscape.use(klay);\r\nif (process.env.NODE_ENV !== 'development') {\r\n  Cytoscape.warnings(false);\r\n}\r\n\r\nconst layout = {\r\n  name: 'klay',\r\n  padding: 40,\r\n  klay: {\r\n    direction: 'RIGHT',\r\n    edgeRouting: 'ORTHOGONAL',\r\n    nodePlacement: 'LINEAR_SEGMENTS',\r\n    edgeSpacingFactor: 0.2,\r\n    inLayerSpacingFactor: 0.7,\r\n    spacing: 90,\r\n    thoroughness: 10,\r\n  },\r\n};\r\n\r\nconst stylesheet: Stylesheet[] = [\r\n  {\r\n    selector: 'core',\r\n    style: {\r\n      'active-bg-color': '#000',\r\n      'active-bg-opacity': 0,\r\n      'active-bg-size': 0,\r\n      'selection-box-color': '#000',\r\n      'selection-box-border-color': '#000',\r\n      'selection-box-border-width': 0,\r\n      'selection-box-opacity': 0,\r\n      'outside-texture-bg-color': '#000',\r\n      'outside-texture-bg-opacity': 0,\r\n    },\r\n  },\r\n  {\r\n    selector: 'node',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'text-valign': 'center',\r\n      'text-halign': 'center',\r\n      'height': '30px',\r\n      'width': '140px',\r\n      'text-max-width': '160px',\r\n      'padding-top': '20px',\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge',\r\n    style: {\r\n      'label': 'data(label)',\r\n      'width': 1,\r\n      'curve-style': 'bezier',\r\n      'control-point-step-size': 100,\r\n      'target-arrow-shape': 'triangle-backcurve',\r\n      'arrow-scale': 1.2,\r\n      'overlay-padding': 0,\r\n      'overlay-opacity': 0,\r\n      'text-wrap': 'wrap',\r\n      'font-size': '14px',\r\n      'color': '#eee',\r\n    },\r\n  },\r\n  {\r\n    selector: 'edge.loop',\r\n    style: {\r\n      'loop-direction': '180deg',\r\n      'loop-sweep': '-40deg',\r\n      'edge-distances': 'node-position',\r\n      'source-endpoint': '-15% 50%',\r\n      'target-endpoint': '15% 50%',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.item-shape',\r\n    style: {\r\n      'shape': 'ellipse',\r\n      'height': '40px',\r\n      'width': '130px',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe-shape',\r\n    style: {\r\n      'shape': 'round-rectangle',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.final-product',\r\n    style: {\r\n      'background-color': '#61e873',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.side-product',\r\n    style: {\r\n      'background-color': '#f371e2',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.input',\r\n    style: {\r\n      'background-color': '#e86161',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.hand-gathered',\r\n    style: {\r\n      'background-color': '#9061e8',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.resource',\r\n    style: {\r\n      'background-color': '#e8a761',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.recipe',\r\n    style: {\r\n      'background-color': '#61c2e8',\r\n    },\r\n  },\r\n  {\r\n    selector: 'node.nuclear',\r\n    style: {\r\n      'background-color': '#f0ed4c',\r\n    },\r\n  },\r\n];\r\n\r\nconst NODE_COLOR_CLASS = {\r\n  [NODE_TYPE.FINAL_PRODUCT]: 'final-product',\r\n  [NODE_TYPE.SIDE_PRODUCT]: 'side-product',\r\n  [NODE_TYPE.INPUT_ITEM]: 'input',\r\n  [NODE_TYPE.HAND_GATHERED_RESOURCE]: 'hand-gathered',\r\n  [NODE_TYPE.RESOURCE]: 'resource',\r\n  [NODE_TYPE.RECIPE]: 'recipe',\r\n};\r\n\r\nfunction truncateFloat(n: number) {\r\n  return n.toFixed(4).replace(/\\.?0+$/, '');\r\n}\r\n\r\nfunction getNodeLabel(node: GraphNode) {\r\n  let label = '';\r\n  let amountText = '';\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    const recipe = recipes[node.key];\r\n    label = recipe.name;\r\n    amountText = `${truncateFloat(node.multiplier)}x ${buildings[recipe.producedIn].name}`;\r\n  } else {\r\n    const item = items[node.key];\r\n    label = item.name;\r\n    amountText = `${truncateFloat(node.multiplier)} / min`;\r\n  }\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction getNodeClasses(node: GraphNode) {\r\n  const classes = [];\r\n  if (node.type === NODE_TYPE.RECIPE) {\r\n    classes.push('recipe-shape');\r\n    const recipe = recipes[node.key];\r\n    if (recipe.producedIn === 'Build_GeneratorNuclear_C') {\r\n      classes.push('nuclear');\r\n    } else {\r\n      classes.push(NODE_COLOR_CLASS[node.type]);\r\n    }\r\n  } else {\r\n    classes.push('item-shape');\r\n    classes.push(NODE_COLOR_CLASS[node.type]);\r\n  }\r\n  return classes;\r\n}\r\n\r\nfunction getEdgeLabel(edge: GraphEdge) {\r\n  const item = items[edge.key];\r\n  const label = item.name;\r\n  const amountText = `${truncateFloat(edge.productionRate)} / min`;\r\n  return `${label}\\n${amountText}`;\r\n}\r\n\r\nfunction _resizeListener(graphRef: React.RefObject<HTMLDivElement | null>) {\r\n  if (graphRef?.current) {\r\n    const bounds = graphRef.current.getBoundingClientRect();\r\n    graphRef.current.style.height = `${window.innerHeight - bounds.top - 40}px`;\r\n  }\r\n}\r\n\r\ninterface Props {\r\n  activeGraph: ProductionGraph | null,\r\n  errorMessage: string,\r\n}\r\n\r\nconst ProductionGraphTab = (props: Props) => {\r\n  const { activeGraph, errorMessage } = props;\r\n  const graphRef = useRef<HTMLDivElement | null>(null);\r\n  const [doFirstRender, setDoFirstRender] = useState(false);\r\n\r\n  function setRef(instance: HTMLDivElement | null) {\r\n    if (instance && !graphRef.current) {\r\n      graphRef.current = instance;\r\n      _resizeListener(graphRef);\r\n      setDoFirstRender(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    function resizeListener() {\r\n      _resizeListener(graphRef);\r\n    }\r\n    window.addEventListener('resize', resizeListener);\r\n    return () => {\r\n      window.removeEventListener('resize', resizeListener);\r\n    }\r\n  }, []);\r\n\r\n  const graphProps = useMemo<any>(() => {\r\n    if (activeGraph == null) {\r\n      return null;\r\n    }\r\n\r\n    const key = nanoid();\r\n    const elements: any[] = [];\r\n\r\n    Object.entries(activeGraph.nodes).forEach(([key, node]) => {\r\n      elements.push({\r\n        group: 'nodes',\r\n        data: {\r\n          id: node.id,\r\n          label: getNodeLabel(node),\r\n        },\r\n        classes: getNodeClasses(node),\r\n      });\r\n    });\r\n    activeGraph.edges.forEach((edge) => {\r\n      elements.push({\r\n        group: 'edges',\r\n        data: {\r\n          source: edge.from,\r\n          target: edge.to,\r\n          label: getEdgeLabel(edge),\r\n        },\r\n        classes: edge.from === edge.to ? ['loop'] : undefined,\r\n      });\r\n    });\r\n    \r\n    return { key, elements };\r\n  }, [activeGraph]);\r\n\r\n  return (\r\n    <GraphContainer fluid ref={setRef}>\r\n      {\r\n        doFirstRender && (\r\n          graphProps != null\r\n          ? (\r\n              <GraphVisualizer\r\n                key={graphProps.key}\r\n                elements={graphProps.elements}\r\n                layout={layout}\r\n                stylesheet={stylesheet}\r\n                boxSelectionEnabled={false}\r\n                autounselectify={true}\r\n                wheelSensitivity={0.1}\r\n                maxZoom={3.0}\r\n                minZoom={0.1}\r\n                style={{ position: 'absolute', height: '100%', width: '100%', overflow: 'hidden' }}\r\n              />\r\n          )\r\n          : (\r\n            <Center style={{ position: 'absolute', height: '100%', width: '100%' }}>\r\n              <Group>\r\n                <AlertCircle color=\"#eee\" size={75} />\r\n                <Group direction='column' style={{ gap: '0px' }}>\r\n                  <Text size='xl'>\r\n                    No graph available\r\n                  </Text>\r\n                  {errorMessage\r\n                    ? (\r\n                      <Text size='sm'>\r\n                        {`ERROR: ${errorMessage}`}\r\n                      </Text>\r\n                    )\r\n                    : null}\r\n                </Group>\r\n              </Group>\r\n            </Center>\r\n          )\r\n        )\r\n      }\r\n    </GraphContainer>\r\n  );\r\n};\r\n\r\nexport default ProductionGraphTab;\r\n\r\nconst GraphContainer = styled(Container)`\r\n  position: relative;\r\n  min-height: 600px;\r\n  min-width: 600px;\r\n  border: 1px solid #fff;\r\n  border-top-width: 0px;\r\n  margin: 0px;\r\n  padding: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Title, List, Divider, Text, Container, Group } from '@mantine/core';\r\nimport { buildings, items } from '../../../../data';\r\nimport { Report } from '../../../../utilities/production-solver';\r\nimport { AlertCircle } from 'react-feather';\r\n\r\nfunction formatFloat(n: number) {\r\n  return n.toLocaleString(undefined, { maximumFractionDigits: 3 });\r\n}\r\n\r\ninterface Props {\r\n  report: Report | null,\r\n}\r\n\r\nconst ReportTab = (props: Props) => {\r\n  const { report } = props;\r\n\r\n  // TODO: Use stylesheets ya dingus\r\n  function renderReport() {\r\n    return (\r\n      <>\r\n        <Title order={2}>Statistics</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          <List.Item>\r\n            <H3 order={3}>Points Produced</H3>\r\n            <Text>{formatFloat(report!.pointsProduced)} per min</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <H3 order={3}>Estimated Power {report!.powerUsageEstimate < 0 ? 'Production' : 'Usage'}</H3>\r\n            <Text>{formatFloat(Math.abs(report!.powerUsageEstimate))} MW</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <H3 order={3}>Resource Usage Score</H3>\r\n            <Text>{formatFloat(report!.resourceEfficiencyScore)}</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <H3 order={3}>Total Build Area</H3>\r\n            <Text>{formatFloat(report!.totalBuildArea)} m²</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n          <List.Item>\r\n            <H3 order={3}>Estimated Minimal Foundations</H3>\r\n            <Text>{formatFloat(report!.estimatedFoundations)} foundations ({formatFloat(report!.estimatedFoundations * 8)} Concrete)</Text>\r\n            <SDivider />\r\n          </List.Item>\r\n        </List>\r\n        <Title order={2} style={{ marginTop: '30px' }}>Buildings</Title>\r\n        <SDivider />\r\n        <List listStyleType='none'>\r\n          {renderBuildingsUsed()}\r\n          <List.Item>\r\n            <H3 order={3}>Total</H3>\r\n            <List withPadding listStyleType='square'>\r\n              {\r\n                Object.entries(report!.totalMaterialCost)\r\n                  .sort((a, b) => {\r\n                    if (a[1] > b[1]) return -1;\r\n                    if (a[1] < b[1]) return 1;\r\n                    return 0;\r\n                  })\r\n                  .map(([itemKey, count]) => (\r\n                    <List.Item key={itemKey}>\r\n                      <b>{items[itemKey].name}</b> <Count>x{formatFloat(count)}</Count>\r\n                    </List.Item>\r\n                  ))\r\n              }\r\n            </List>\r\n          </List.Item>\r\n        </List>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function renderBuildingsUsed() {\r\n    return Object.entries(report!.buildingsUsed)\r\n      .sort((a, b) => {\r\n        if (a[1].count > b[1].count) return -1;\r\n        if (a[1].count < b[1].count) return 1;\r\n        return 0;\r\n      })\r\n      .map(([buildingKey, usageInfo]) => (\r\n      <List.Item key={buildingKey} style={{ paddingBottom: '10px' }}>\r\n        <H3 order={3}>\r\n          {buildings[buildingKey].name} <Count>x{formatFloat(usageInfo.count)}</Count>\r\n        </H3>\r\n        <List withPadding listStyleType='square' style={{ marginBottom: '10px' }}>\r\n          {\r\n            Object.entries(usageInfo.materialCost)\r\n              .sort((a, b) => {\r\n                if (a[1] > b[1]) return -1;\r\n                if (a[1] < b[1]) return 1;\r\n                return 0;\r\n              })\r\n              .map(([itemKey, count]) => (\r\n                <List.Item key={itemKey}>\r\n                  <b>{items[itemKey].name}</b>  <Count>x{formatFloat(count)}</Count>\r\n                </List.Item>\r\n              ))\r\n          }\r\n        </List>\r\n      </List.Item>\r\n    ))\r\n  }\r\n  \r\n  return (\r\n    <ReportContainer fluid>\r\n      {\r\n      !report\r\n        ? (\r\n          <Group style={{ height: '150px', justifyContent: 'flex-start' }}>\r\n            <AlertCircle color=\"#eee\" size={50} />\r\n            <Text style={{ fontSize: '32px' }}>\r\n              No data available\r\n            </Text>\r\n          </Group>\r\n        )\r\n        : renderReport()\r\n      }\r\n    </ReportContainer>\r\n  );\r\n};\r\n\r\nexport default ReportTab;\r\n\r\nconst ReportContainer = styled(Container)`\r\n  padding: 15px;\r\n`;\r\n\r\nconst SDivider = styled(Divider)`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst H3 = styled(Title)`\r\n  font-size: 18px;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  font-size: 14px;\r\n  margin-left: 3px;\r\n`;\r\n","import React from 'react';\r\nimport { Container, Tabs } from '@mantine/core';\r\nimport { Share2, Edit } from 'react-feather';\r\nimport ProductionGraphTab from './ProductionGraphTab';\r\nimport ReportTab from './ReportTab';\r\nimport { SolverResults } from '../../../utilities/production-solver';\r\n\r\ninterface Props {\r\n  solverResults: SolverResults | null;\r\n}\r\n\r\nconst PlannerResults = (props: Props) => {\r\n  const { solverResults } = props;\r\n  return (\r\n    <Tabs variant='outline'>\r\n      <Tabs.Tab label='Production Graph' icon={<Share2 size={18} />}>\r\n        <Container fluid padding={0}>\r\n          <ProductionGraphTab activeGraph={solverResults?.productionGraph || null} errorMessage={solverResults?.error || ''} />\r\n        </Container>\r\n      </Tabs.Tab>\r\n      <Tabs.Tab label='Report' icon={<Edit size={18} />}>\r\n        <Container fluid>\r\n          <ReportTab report={solverResults?.report || null} />\r\n        </Container>\r\n      </Tabs.Tab>\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default PlannerResults;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport seedrandom from 'seedrandom';\r\nimport { Paper, Title, Divider, Group, Button, Switch, Text } from '@mantine/core';\r\nimport { FactoryOptions, useProductionContext } from '../../contexts/production';\r\nimport { usePrevious } from '../../hooks/usePrevious';\r\nimport Drawer from '../../components/Drawer';\r\nimport { SolverResults, ProductionSolver } from '../../utilities/production-solver';\r\nimport PlannerOptions from './PlannerOptions';\r\nimport PlannerResults from './PlannerResults';\r\n\r\n\r\nconst ONE_HOUR = 1000 * 60 * 60;\r\nconst seed = Math.floor(new Date().getTime() / ONE_HOUR);\r\nconst rng = seedrandom(String(seed));\r\n\r\nconst TIPS = [\r\n  'Pet the lizard doggo!',\r\n  'Get back to work!',\r\n  'Update 5 now available!',\r\n  'Arachnophobia mode enabled.',\r\n  'FICSIT does not waste.',\r\n  'Linear algebra!',\r\n  'Do not pet the spiders.',\r\n  'BEAMS.',\r\n  'Just 5 more minutes...',\r\n  'Thanks, Jace. Helps a lot!',\r\n];\r\n\r\nconst TIP_INDEX = Math.floor(rng() * TIPS.length);\r\nconst TIP = `FICSIT Tip #${TIP_INDEX}: ${TIPS[TIP_INDEX]}`\r\n\r\nconst _handleCalculateFactory = _.debounce(async (state: FactoryOptions, setSolverResults: React.Dispatch<React.SetStateAction<SolverResults | null>>) => {\r\n  try {\r\n    const solver = new ProductionSolver(state);\r\n    const results = await solver.exec();\r\n    setSolverResults((prevState) => {\r\n      if (!prevState || prevState.timestamp < results.timestamp) {\r\n        console.log(`Computed in: ${results.computeTime}ms`);\r\n        return results;\r\n      }\r\n      return prevState;\r\n    });\r\n  } catch (e: any) {\r\n    setSolverResults({\r\n      productionGraph: null,\r\n      report: null,\r\n      timestamp: performance.now(),\r\n      computeTime: 0,\r\n      error: e.message,\r\n    });\r\n  }\r\n}, 300, { leading: true, trailing: true });\r\n\r\n\r\nconst Factory = () => {\r\n  const [autoCalc, setAutoCalc] = useState(true);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [solverResults, setSolverResults] = useState<SolverResults | null>(null);\r\n  const ctx = useProductionContext();\r\n  const prevState = usePrevious(ctx.state);\r\n\r\n  const handleCalculateFactory = useCallback(() => {\r\n    _handleCalculateFactory(ctx.state, setSolverResults)\r\n  }, [ctx.state]);\r\n\r\n  const handleSetAutoCalc = (checked: boolean) => {\r\n    setAutoCalc(checked);\r\n    if (checked) {\r\n      handleCalculateFactory();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!loaded) {\r\n      handleCalculateFactory();\r\n      setLoaded(true);\r\n    } else if (autoCalc && prevState !== ctx.state) {\r\n      handleCalculateFactory();\r\n    }\r\n  }, [autoCalc, ctx.state, handleCalculateFactory, loaded, prevState]);\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ marginBottom: '20px' }}>\r\n        <Title order={2}>Control Panel</Title>\r\n        <Text>\r\n          {TIP}\r\n        </Text>\r\n        <Divider style={{ marginTop: '15px', marginBottom: '15px' }} />\r\n        <Group style={{ marginBottom: '15px' }}>\r\n          <Button onClick={handleCalculateFactory} disabled={autoCalc} style={{ marginBottom: '10px', marginRight: '15px' }}>\r\n            Calculate\r\n          </Button>\r\n          <Button\r\n            color='danger'\r\n            onClick={() => { ctx.dispatch({ type: 'RESET_FACTORY' }) }}\r\n            style={{ marginBottom: '10px' }}\r\n          >\r\n            Reset ALL Factory Options\r\n          </Button>\r\n        </Group>\r\n        <Switch\r\n          size='md'\r\n          label='Auto-calculate (turn this off if changing options is too slow)'\r\n          checked={autoCalc}\r\n          onChange={(e) => { handleSetAutoCalc(e.currentTarget.checked); }}\r\n        />\r\n      </Paper>\r\n      <PlannerResults solverResults={solverResults} />\r\n      <Drawer open={drawerOpen} onToggle={(value) => { setDrawerOpen(value); }}>\r\n        <PlannerOptions />\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Factory;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container } from '@mantine/core';\r\nimport { ProductionProvider } from '../../contexts/production';\r\nimport Factory from './Factory';\r\n\r\n\r\nconst ProductionPlanner = () => {\r\n  return (\r\n    <MainContainer fluid>\r\n      <ProductionProvider>\r\n        <Factory />\r\n      </ProductionProvider>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default ProductionPlanner;\r\n\r\nconst MainContainer = styled(Container)`\r\n  margin-left: ${({ theme }) => theme.other.drawerClosedWidth};\r\n  padding-left: 0px;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppShell, Header, useMantineTheme } from '@mantine/core';\r\nimport SiteHeader from './SiteHeader';\r\nimport ProductionPlanner from '../ProductionPlanner';\r\n\r\nconst Main = () => {\r\n  const theme = useMantineTheme();\r\n  return (\r\n    <AppShell\r\n      padding='md'\r\n      header={<SHeader height={theme.other.headerHeight} padding='sm'><SiteHeader /></SHeader>}\r\n    >\r\n      <ProductionPlanner />\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\nconst SHeader = styled(Header)`\r\n  margin: 0px;\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.primary[6]};\r\n  overflow: hidden;\r\n`;\r\n","import { MantineThemeOverride } from '@mantine/core';\r\n// import { gradientFromColor } from './utilities/color';\r\n\r\nexport const theme: MantineThemeOverride = {\r\n  primaryColor: 'primary',\r\n  colors: {\r\n    'primary': [\"#ffefda\", \"#ffe0b8\", \"#ffd195\", \"#ffc272\", \"#ffb34f\", \"#ffa42d\", \"#ff950a\", \"#d07b0c\", \"#9c6113\", \"#6d4715\"],\r\n    'danger': [\"#fee5e5\", \"#fecdcd\", \"#fdb4b4\", \"#fc9c9c\", \"#fb8383\", \"#fb6b6b\", \"#fa5252\", \"#ed2626\", \"#bf1c1c\", \"#861d1d\"],\r\n    'background': [\"#26282b\", \"#373b40\", \"#3f434a\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\"],\r\n  },\r\n  white: '#eee',\r\n  fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\r\n  radius: {\r\n    xs: 0,\r\n    sm: 2,\r\n    md: 4,\r\n    lg: 8,\r\n    xl: 16,\r\n  },\r\n  other: {\r\n    headerHeight: '64px',\r\n    drawerOpenWidth: '600px',\r\n    drawerClosedWidth: '45px',\r\n  },\r\n};\r\n\r\n\r\nexport const styles: any = {\r\n  AppShell: (theme: any) => ({\r\n    root: {\r\n      minHeight: '100vh',\r\n    }\r\n  }),\r\n  Paper: (theme: any) => ({\r\n    root: {\r\n      background: theme.colors.background[1],\r\n      padding: '15px',\r\n    }\r\n  }),\r\n  Text: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Title: (theme: any) => ({\r\n    root: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  List: (theme: any) => ({\r\n    item: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Checkbox: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    }\r\n  }),\r\n  Switch: (theme: any) => ({\r\n    label: {\r\n      color: theme.white,\r\n    },\r\n    input: {\r\n      background: theme.colors.background[1],\r\n      borderWidth: '2px',\r\n      '&:checked': {\r\n        background: theme.colors.primary[4],\r\n        borderColor: theme.colors.primary[4],\r\n      }\r\n    }\r\n  }),\r\n  Divider: (theme: any) => ({\r\n    horizontal: {\r\n      borderTopColor: theme.colors.background[2],\r\n    }\r\n  }),\r\n  Button: (theme: any) => ({\r\n    root: {\r\n      '&[disabled]': {\r\n        color: `${theme.white} !important`,\r\n        backgroundColor: `${theme.colors.primary[7]} !important`,\r\n        opacity: 0.5,\r\n      }\r\n    }\r\n  }),\r\n  Tabs: (theme: any) => ({\r\n    tabLabel: {\r\n      color: theme.white,\r\n      fontFamily: \"'M PLUS 1 Code', sans-serif\",\r\n      fontSize: '16px',\r\n    },\r\n    tabIcon: {\r\n      color: theme.white,\r\n    },\r\n    tabControl: {\r\n      minWidth: '200px',\r\n    },\r\n    tabActive: {\r\n      background: `${theme.colors.background[1]} !important`,\r\n      borderBottomWidth: `0px !important`,\r\n    },\r\n    body: {\r\n      paddingTop: '0px',\r\n      background: theme.colors.background[0],\r\n      borderBottomLeftRadius: '2px',\r\n      borderBottomRightRadius: '2px',\r\n    },\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\r\nimport Main from './containers/Main';\r\nimport { DrawerProvider } from './contexts/drawer';\r\nimport { theme, styles } from './theme';\r\n\r\nfunction App() {\r\n  return (\r\n    <MantineProvider\r\n      theme={theme}\r\n      styles={styles}\r\n    >\r\n      <ThemeTransfer />\r\n    </MantineProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst ThemeTransfer = () => {\r\n  const mergedTheme = useMantineTheme();\r\n  return (\r\n    <ThemeProvider theme={mergedTheme}>\r\n      <DrawerProvider>\r\n        <Main />\r\n      </DrawerProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}